// Code generated by protoc-gen-connect-swift. DO NOT EDIT.
//
// Source: stability_api/platform/dashboard/v1/dashboard.proto
//

import Connect
import Foundation
import SwiftProtobuf

internal protocol Stabilityai_Api_Dashboard_V1_DashboardServiceClientInterface {

    /// Get info
    @available(iOS 13, *)
    func `getMe`(request: Stabilityai_Api_Dashboard_V1_EmptyRequest, headers: Connect.Headers) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_User>

    @available(iOS 13, *)
    func `getOrganization`(request: Stabilityai_Api_Dashboard_V1_GetOrganizationRequest, headers: Connect.Headers) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_Organization>

    @available(iOS 13, *)
    func `getMetrics`(request: Stabilityai_Api_Dashboard_V1_GetMetricsRequest, headers: Connect.Headers) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_Metrics>

    /// API key management
    @available(iOS 13, *)
    func `createApikey`(request: Stabilityai_Api_Dashboard_V1_APIKeyRequest, headers: Connect.Headers) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_APIKey>

    @available(iOS 13, *)
    func `deleteApikey`(request: Stabilityai_Api_Dashboard_V1_APIKeyFindRequest, headers: Connect.Headers) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_APIKey>

    /// User settings
    @available(iOS 13, *)
    func `updateDefaultOrganization`(request: Stabilityai_Api_Dashboard_V1_UpdateDefaultOrganizationRequest, headers: Connect.Headers) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_User>

    @available(iOS 13, *)
    func `getClientSettings`(request: Stabilityai_Api_Dashboard_V1_EmptyRequest, headers: Connect.Headers) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_ClientSettings>

    @available(iOS 13, *)
    func `setClientSettings`(request: Stabilityai_Api_Dashboard_V1_ClientSettings, headers: Connect.Headers) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_ClientSettings>

    @available(iOS 13, *)
    func `updateUserInfo`(request: Stabilityai_Api_Dashboard_V1_UpdateUserInfoRequest, headers: Connect.Headers) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_User>

    @available(iOS 13, *)
    func `createPasswordChangeTicket`(request: Stabilityai_Api_Dashboard_V1_EmptyRequest, headers: Connect.Headers) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_UserPasswordChangeTicket>

    @available(iOS 13, *)
    func `deleteAccount`(request: Stabilityai_Api_Dashboard_V1_EmptyRequest, headers: Connect.Headers) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_User>

    /// Payment functions
    @available(iOS 13, *)
    func `createCharge`(request: Stabilityai_Api_Dashboard_V1_CreateChargeRequest, headers: Connect.Headers) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_Charge>

    @available(iOS 13, *)
    func `getCharges`(request: Stabilityai_Api_Dashboard_V1_GetChargesRequest, headers: Connect.Headers) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_Charges>

    @available(iOS 13, *)
    func `createAutoChargeIntent`(request: Stabilityai_Api_Dashboard_V1_CreateAutoChargeIntentRequest, headers: Connect.Headers) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_AutoChargeIntent>

    @available(iOS 13, *)
    func `updateAutoChargeIntent`(request: Stabilityai_Api_Dashboard_V1_CreateAutoChargeIntentRequest, headers: Connect.Headers) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_AutoChargeIntent>

    @available(iOS 13, *)
    func `getAutoChargeIntent`(request: Stabilityai_Api_Dashboard_V1_GetAutoChargeRequest, headers: Connect.Headers) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_AutoChargeIntent>
}

/// Concrete implementation of `Stabilityai_Api_Dashboard_V1_DashboardServiceClientInterface`.
internal final class Stabilityai_Api_Dashboard_V1_DashboardServiceClient: Stabilityai_Api_Dashboard_V1_DashboardServiceClientInterface {
    private let client: Connect.ProtocolClientInterface

    internal init(client: Connect.ProtocolClientInterface) {
        self.client = client
    }

    @available(iOS 13, *)
    internal func `getMe`(request: Stabilityai_Api_Dashboard_V1_EmptyRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_User> {
        return await self.client.unary(path: "stabilityai.api.dashboard.v1.DashboardService/GetMe", request: request, headers: headers)
    }

    @available(iOS 13, *)
    internal func `getOrganization`(request: Stabilityai_Api_Dashboard_V1_GetOrganizationRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_Organization> {
        return await self.client.unary(path: "stabilityai.api.dashboard.v1.DashboardService/GetOrganization", request: request, headers: headers)
    }

    @available(iOS 13, *)
    internal func `getMetrics`(request: Stabilityai_Api_Dashboard_V1_GetMetricsRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_Metrics> {
        return await self.client.unary(path: "stabilityai.api.dashboard.v1.DashboardService/GetMetrics", request: request, headers: headers)
    }

    @available(iOS 13, *)
    internal func `createApikey`(request: Stabilityai_Api_Dashboard_V1_APIKeyRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_APIKey> {
        return await self.client.unary(path: "stabilityai.api.dashboard.v1.DashboardService/CreateAPIKey", request: request, headers: headers)
    }

    @available(iOS 13, *)
    internal func `deleteApikey`(request: Stabilityai_Api_Dashboard_V1_APIKeyFindRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_APIKey> {
        return await self.client.unary(path: "stabilityai.api.dashboard.v1.DashboardService/DeleteAPIKey", request: request, headers: headers)
    }

    @available(iOS 13, *)
    internal func `updateDefaultOrganization`(request: Stabilityai_Api_Dashboard_V1_UpdateDefaultOrganizationRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_User> {
        return await self.client.unary(path: "stabilityai.api.dashboard.v1.DashboardService/UpdateDefaultOrganization", request: request, headers: headers)
    }

    @available(iOS 13, *)
    internal func `getClientSettings`(request: Stabilityai_Api_Dashboard_V1_EmptyRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_ClientSettings> {
        return await self.client.unary(path: "stabilityai.api.dashboard.v1.DashboardService/GetClientSettings", request: request, headers: headers)
    }

    @available(iOS 13, *)
    internal func `setClientSettings`(request: Stabilityai_Api_Dashboard_V1_ClientSettings, headers: Connect.Headers = [:]) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_ClientSettings> {
        return await self.client.unary(path: "stabilityai.api.dashboard.v1.DashboardService/SetClientSettings", request: request, headers: headers)
    }

    @available(iOS 13, *)
    internal func `updateUserInfo`(request: Stabilityai_Api_Dashboard_V1_UpdateUserInfoRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_User> {
        return await self.client.unary(path: "stabilityai.api.dashboard.v1.DashboardService/UpdateUserInfo", request: request, headers: headers)
    }

    @available(iOS 13, *)
    internal func `createPasswordChangeTicket`(request: Stabilityai_Api_Dashboard_V1_EmptyRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_UserPasswordChangeTicket> {
        return await self.client.unary(path: "stabilityai.api.dashboard.v1.DashboardService/CreatePasswordChangeTicket", request: request, headers: headers)
    }

    @available(iOS 13, *)
    internal func `deleteAccount`(request: Stabilityai_Api_Dashboard_V1_EmptyRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_User> {
        return await self.client.unary(path: "stabilityai.api.dashboard.v1.DashboardService/DeleteAccount", request: request, headers: headers)
    }

    @available(iOS 13, *)
    internal func `createCharge`(request: Stabilityai_Api_Dashboard_V1_CreateChargeRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_Charge> {
        return await self.client.unary(path: "stabilityai.api.dashboard.v1.DashboardService/CreateCharge", request: request, headers: headers)
    }

    @available(iOS 13, *)
    internal func `getCharges`(request: Stabilityai_Api_Dashboard_V1_GetChargesRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_Charges> {
        return await self.client.unary(path: "stabilityai.api.dashboard.v1.DashboardService/GetCharges", request: request, headers: headers)
    }

    @available(iOS 13, *)
    internal func `createAutoChargeIntent`(request: Stabilityai_Api_Dashboard_V1_CreateAutoChargeIntentRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_AutoChargeIntent> {
        return await self.client.unary(path: "stabilityai.api.dashboard.v1.DashboardService/CreateAutoChargeIntent", request: request, headers: headers)
    }

    @available(iOS 13, *)
    internal func `updateAutoChargeIntent`(request: Stabilityai_Api_Dashboard_V1_CreateAutoChargeIntentRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_AutoChargeIntent> {
        return await self.client.unary(path: "stabilityai.api.dashboard.v1.DashboardService/UpdateAutoChargeIntent", request: request, headers: headers)
    }

    @available(iOS 13, *)
    internal func `getAutoChargeIntent`(request: Stabilityai_Api_Dashboard_V1_GetAutoChargeRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Stabilityai_Api_Dashboard_V1_AutoChargeIntent> {
        return await self.client.unary(path: "stabilityai.api.dashboard.v1.DashboardService/GetAutoChargeIntent", request: request, headers: headers)
    }

    internal enum Metadata {
        internal enum Methods {
            internal static let getMe = Connect.MethodSpec(name: "GetMe", service: "stabilityai.api.dashboard.v1.DashboardService", type: .unary)
            internal static let getOrganization = Connect.MethodSpec(name: "GetOrganization", service: "stabilityai.api.dashboard.v1.DashboardService", type: .unary)
            internal static let getMetrics = Connect.MethodSpec(name: "GetMetrics", service: "stabilityai.api.dashboard.v1.DashboardService", type: .unary)
            internal static let createApikey = Connect.MethodSpec(name: "CreateAPIKey", service: "stabilityai.api.dashboard.v1.DashboardService", type: .unary)
            internal static let deleteApikey = Connect.MethodSpec(name: "DeleteAPIKey", service: "stabilityai.api.dashboard.v1.DashboardService", type: .unary)
            internal static let updateDefaultOrganization = Connect.MethodSpec(name: "UpdateDefaultOrganization", service: "stabilityai.api.dashboard.v1.DashboardService", type: .unary)
            internal static let getClientSettings = Connect.MethodSpec(name: "GetClientSettings", service: "stabilityai.api.dashboard.v1.DashboardService", type: .unary)
            internal static let setClientSettings = Connect.MethodSpec(name: "SetClientSettings", service: "stabilityai.api.dashboard.v1.DashboardService", type: .unary)
            internal static let updateUserInfo = Connect.MethodSpec(name: "UpdateUserInfo", service: "stabilityai.api.dashboard.v1.DashboardService", type: .unary)
            internal static let createPasswordChangeTicket = Connect.MethodSpec(name: "CreatePasswordChangeTicket", service: "stabilityai.api.dashboard.v1.DashboardService", type: .unary)
            internal static let deleteAccount = Connect.MethodSpec(name: "DeleteAccount", service: "stabilityai.api.dashboard.v1.DashboardService", type: .unary)
            internal static let createCharge = Connect.MethodSpec(name: "CreateCharge", service: "stabilityai.api.dashboard.v1.DashboardService", type: .unary)
            internal static let getCharges = Connect.MethodSpec(name: "GetCharges", service: "stabilityai.api.dashboard.v1.DashboardService", type: .unary)
            internal static let createAutoChargeIntent = Connect.MethodSpec(name: "CreateAutoChargeIntent", service: "stabilityai.api.dashboard.v1.DashboardService", type: .unary)
            internal static let updateAutoChargeIntent = Connect.MethodSpec(name: "UpdateAutoChargeIntent", service: "stabilityai.api.dashboard.v1.DashboardService", type: .unary)
            internal static let getAutoChargeIntent = Connect.MethodSpec(name: "GetAutoChargeIntent", service: "stabilityai.api.dashboard.v1.DashboardService", type: .unary)
        }
    }
}
