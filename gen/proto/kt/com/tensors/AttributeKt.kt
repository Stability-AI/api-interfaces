// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: stabilityai/tensors/tensors.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.tensors;

@kotlin.jvm.JvmName("-initializeattribute")
public inline fun attribute(block: com.tensors.AttributeKt.Dsl.() -> kotlin.Unit): com.tensors.Attribute =
  com.tensors.AttributeKt.Dsl._create(com.tensors.Attribute.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `tensors.Attribute`
 */
public object AttributeKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.tensors.Attribute.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.tensors.Attribute.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.tensors.Attribute = _builder.build()

    /**
     * `string name = 1 [json_name = "name"];`
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * `string name = 1 [json_name = "name"];`
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * `.tensors.Module module = 3 [json_name = "module"];`
     */
    public var module: com.tensors.Module
      @JvmName("getModule")
      get() = _builder.getModule()
      @JvmName("setModule")
      set(value) {
        _builder.setModule(value)
      }
    /**
     * `.tensors.Module module = 3 [json_name = "module"];`
     */
    public fun clearModule() {
      _builder.clearModule()
    }
    /**
     * `.tensors.Module module = 3 [json_name = "module"];`
     * @return Whether the module field is set.
     */
    public fun hasModule(): kotlin.Boolean {
      return _builder.hasModule()
    }

    /**
     * `.tensors.Tensor tensor = 4 [json_name = "tensor"];`
     */
    public var tensor: com.tensors.Tensor
      @JvmName("getTensor")
      get() = _builder.getTensor()
      @JvmName("setTensor")
      set(value) {
        _builder.setTensor(value)
      }
    /**
     * `.tensors.Tensor tensor = 4 [json_name = "tensor"];`
     */
    public fun clearTensor() {
      _builder.clearTensor()
    }
    /**
     * `.tensors.Tensor tensor = 4 [json_name = "tensor"];`
     * @return Whether the tensor field is set.
     */
    public fun hasTensor(): kotlin.Boolean {
      return _builder.hasTensor()
    }

    /**
     * `string string = 5 [json_name = "string"];`
     */
    public var string: kotlin.String
      @JvmName("getString")
      get() = _builder.getString()
      @JvmName("setString")
      set(value) {
        _builder.setString(value)
      }
    /**
     * `string string = 5 [json_name = "string"];`
     */
    public fun clearString() {
      _builder.clearString()
    }
    /**
     * `string string = 5 [json_name = "string"];`
     * @return Whether the string field is set.
     */
    public fun hasString(): kotlin.Boolean {
      return _builder.hasString()
    }

    /**
     * `int64 int64 = 6 [json_name = "int64"];`
     */
    public var int64: kotlin.Long
      @JvmName("getInt64")
      get() = _builder.getInt64()
      @JvmName("setInt64")
      set(value) {
        _builder.setInt64(value)
      }
    /**
     * `int64 int64 = 6 [json_name = "int64"];`
     */
    public fun clearInt64() {
      _builder.clearInt64()
    }
    /**
     * `int64 int64 = 6 [json_name = "int64"];`
     * @return Whether the int64 field is set.
     */
    public fun hasInt64(): kotlin.Boolean {
      return _builder.hasInt64()
    }

    /**
     * `float float = 7 [json_name = "float"];`
     */
    public var float: kotlin.Float
      @JvmName("getFloat")
      get() = _builder.getFloat()
      @JvmName("setFloat")
      set(value) {
        _builder.setFloat(value)
      }
    /**
     * `float float = 7 [json_name = "float"];`
     */
    public fun clearFloat() {
      _builder.clearFloat()
    }
    /**
     * `float float = 7 [json_name = "float"];`
     * @return Whether the float field is set.
     */
    public fun hasFloat(): kotlin.Boolean {
      return _builder.hasFloat()
    }

    /**
     * `bool bool = 8 [json_name = "bool"];`
     */
    public var bool: kotlin.Boolean
      @JvmName("getBool")
      get() = _builder.getBool()
      @JvmName("setBool")
      set(value) {
        _builder.setBool(value)
      }
    /**
     * `bool bool = 8 [json_name = "bool"];`
     */
    public fun clearBool() {
      _builder.clearBool()
    }
    /**
     * `bool bool = 8 [json_name = "bool"];`
     * @return Whether the bool field is set.
     */
    public fun hasBool(): kotlin.Boolean {
      return _builder.hasBool()
    }
    public val valueCase: com.tensors.Attribute.ValueCase
      @JvmName("getValueCase")
      get() = _builder.getValueCase()

    public fun clearValue() {
      _builder.clearValue()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.tensors.Attribute.copy(block: com.tensors.AttributeKt.Dsl.() -> kotlin.Unit): com.tensors.Attribute =
  com.tensors.AttributeKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.tensors.AttributeOrBuilder.moduleOrNull: com.tensors.Module?
  get() = if (hasModule()) getModule() else null

public val com.tensors.AttributeOrBuilder.tensorOrNull: com.tensors.Tensor?
  get() = if (hasTensor()) getTensor() else null

