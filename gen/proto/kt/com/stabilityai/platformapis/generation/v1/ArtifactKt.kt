// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: stabilityai/platformapis/generation/v1/generation.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.stabilityai.platformapis.generation.v1;

@kotlin.jvm.JvmName("-initializeartifact")
public inline fun artifact(block: com.stabilityai.platformapis.generation.v1.ArtifactKt.Dsl.() -> kotlin.Unit): com.stabilityai.platformapis.generation.v1.Artifact =
  com.stabilityai.platformapis.generation.v1.ArtifactKt.Dsl._create(com.stabilityai.platformapis.generation.v1.Artifact.newBuilder()).apply { block() }._build()
/**
 * ```
 * A tangible Artifact, such as an image, video, or text that is used for input
 * or output.
 * ```
 *
 * Protobuf type `stabilityai.platformapis.generation.v1.Artifact`
 */
public object ArtifactKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.stabilityai.platformapis.generation.v1.Artifact.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.stabilityai.platformapis.generation.v1.Artifact.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.stabilityai.platformapis.generation.v1.Artifact = _builder.build()

    /**
     * `uint64 id = 1 [json_name = "id"];`
     */
    public var id: kotlin.Long
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * `uint64 id = 1 [json_name = "id"];`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * `.stabilityai.platformapis.generation.v1.ArtifactType type = 2 [json_name = "type"];`
     */
    public var type: com.stabilityai.platformapis.generation.v1.ArtifactType
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    public var typeValue: kotlin.Int
      @JvmName("getTypeValue")
      get() = _builder.getTypeValue()
      @JvmName("setTypeValue")
      set(value) {
        _builder.setTypeValue(value)
      }
    /**
     * `.stabilityai.platformapis.generation.v1.ArtifactType type = 2 [json_name = "type"];`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * ```
     * MIME type identifier, e.g. "image/png"
     * ```
     *
     * `string mime = 3 [json_name = "mime"];`
     */
    public var mime: kotlin.String
      @JvmName("getMime")
      get() = _builder.getMime()
      @JvmName("setMime")
      set(value) {
        _builder.setMime(value)
      }
    /**
     * ```
     * MIME type identifier, e.g. "image/png"
     * ```
     *
     * `string mime = 3 [json_name = "mime"];`
     */
    public fun clearMime() {
      _builder.clearMime()
    }

    /**
     * ```
     * Magic number, e.g. "PNG"
     * ```
     *
     * `optional string magic = 4 [json_name = "magic"];`
     */
    public var magic: kotlin.String
      @JvmName("getMagic")
      get() = _builder.getMagic()
      @JvmName("setMagic")
      set(value) {
        _builder.setMagic(value)
      }
    /**
     * ```
     * Magic number, e.g. "PNG"
     * ```
     *
     * `optional string magic = 4 [json_name = "magic"];`
     */
    public fun clearMagic() {
      _builder.clearMagic()
    }
    /**
     * ```
     * Magic number, e.g. "PNG"
     * ```
     *
     * `optional string magic = 4 [json_name = "magic"];`
     * @return Whether the magic field is set.
     */
    public fun hasMagic(): kotlin.Boolean {
      return _builder.hasMagic()
    }

    /**
     * ```
     * Binary data, e.g. PNG image
     * ```
     *
     * `bytes binary = 5 [json_name = "binary"];`
     */
    public var binary: com.google.protobuf.ByteString
      @JvmName("getBinary")
      get() = _builder.getBinary()
      @JvmName("setBinary")
      set(value) {
        _builder.setBinary(value)
      }
    /**
     * ```
     * Binary data, e.g. PNG image
     * ```
     *
     * `bytes binary = 5 [json_name = "binary"];`
     */
    public fun clearBinary() {
      _builder.clearBinary()
    }
    /**
     * ```
     * Binary data, e.g. PNG image
     * ```
     *
     * `bytes binary = 5 [json_name = "binary"];`
     * @return Whether the binary field is set.
     */
    public fun hasBinary(): kotlin.Boolean {
      return _builder.hasBinary()
    }

    /**
     * ```
     * Text data, e.g. text prompt
     * ```
     *
     * `string text = 6 [json_name = "text"];`
     */
    public var text: kotlin.String
      @JvmName("getText")
      get() = _builder.getText()
      @JvmName("setText")
      set(value) {
        _builder.setText(value)
      }
    /**
     * ```
     * Text data, e.g. text prompt
     * ```
     *
     * `string text = 6 [json_name = "text"];`
     */
    public fun clearText() {
      _builder.clearText()
    }
    /**
     * ```
     * Text data, e.g. text prompt
     * ```
     *
     * `string text = 6 [json_name = "text"];`
     * @return Whether the text field is set.
     */
    public fun hasText(): kotlin.Boolean {
      return _builder.hasText()
    }

    /**
     * ```
     * Tokenized text data, e.g. GPT tokens
     * ```
     *
     * `.stabilityai.platformapis.generation.v1.Tokens tokens = 7 [json_name = "tokens"];`
     */
    public var tokens: com.stabilityai.platformapis.generation.v1.Tokens
      @JvmName("getTokens")
      get() = _builder.getTokens()
      @JvmName("setTokens")
      set(value) {
        _builder.setTokens(value)
      }
    /**
     * ```
     * Tokenized text data, e.g. GPT tokens
     * ```
     *
     * `.stabilityai.platformapis.generation.v1.Tokens tokens = 7 [json_name = "tokens"];`
     */
    public fun clearTokens() {
      _builder.clearTokens()
    }
    /**
     * ```
     * Tokenized text data, e.g. GPT tokens
     * ```
     *
     * `.stabilityai.platformapis.generation.v1.Tokens tokens = 7 [json_name = "tokens"];`
     * @return Whether the tokens field is set.
     */
    public fun hasTokens(): kotlin.Boolean {
      return _builder.hasTokens()
    }

    /**
     * `.stabilityai.platformapis.generation.v1.ClassifierParameters classifier = 11 [json_name = "classifier"];`
     */
    public var classifier: com.stabilityai.platformapis.generation.v1.ClassifierParameters
      @JvmName("getClassifier")
      get() = _builder.getClassifier()
      @JvmName("setClassifier")
      set(value) {
        _builder.setClassifier(value)
      }
    /**
     * `.stabilityai.platformapis.generation.v1.ClassifierParameters classifier = 11 [json_name = "classifier"];`
     */
    public fun clearClassifier() {
      _builder.clearClassifier()
    }
    /**
     * `.stabilityai.platformapis.generation.v1.ClassifierParameters classifier = 11 [json_name = "classifier"];`
     * @return Whether the classifier field is set.
     */
    public fun hasClassifier(): kotlin.Boolean {
      return _builder.hasClassifier()
    }

    /**
     * ```
     * torch.Tensor:
     * ```
     *
     * `.tensors.Tensor tensor = 14 [json_name = "tensor"];`
     */
    public var tensor: com.tensors.Tensor
      @JvmName("getTensor")
      get() = _builder.getTensor()
      @JvmName("setTensor")
      set(value) {
        _builder.setTensor(value)
      }
    /**
     * ```
     * torch.Tensor:
     * ```
     *
     * `.tensors.Tensor tensor = 14 [json_name = "tensor"];`
     */
    public fun clearTensor() {
      _builder.clearTensor()
    }
    /**
     * ```
     * torch.Tensor:
     * ```
     *
     * `.tensors.Tensor tensor = 14 [json_name = "tensor"];`
     * @return Whether the tensor field is set.
     */
    public fun hasTensor(): kotlin.Boolean {
      return _builder.hasTensor()
    }

    /**
     * ```
     * Index of this artifact in input/output list
     * ```
     *
     * `uint32 index = 8 [json_name = "index"];`
     */
    public var index: kotlin.Int
      @JvmName("getIndex")
      get() = _builder.getIndex()
      @JvmName("setIndex")
      set(value) {
        _builder.setIndex(value)
      }
    /**
     * ```
     * Index of this artifact in input/output list
     * ```
     *
     * `uint32 index = 8 [json_name = "index"];`
     */
    public fun clearIndex() {
      _builder.clearIndex()
    }

    /**
     * ```
     * Reason for finishing, if applicable
     * ```
     *
     * `.stabilityai.platformapis.generation.v1.FinishReason finish_reason = 9 [json_name = "finishReason"];`
     */
    public var finishReason: com.stabilityai.platformapis.generation.v1.FinishReason
      @JvmName("getFinishReason")
      get() = _builder.getFinishReason()
      @JvmName("setFinishReason")
      set(value) {
        _builder.setFinishReason(value)
      }
    public var finishReasonValue: kotlin.Int
      @JvmName("getFinishReasonValue")
      get() = _builder.getFinishReasonValue()
      @JvmName("setFinishReasonValue")
      set(value) {
        _builder.setFinishReasonValue(value)
      }
    /**
     * ```
     * Reason for finishing, if applicable
     * ```
     *
     * `.stabilityai.platformapis.generation.v1.FinishReason finish_reason = 9 [json_name = "finishReason"];`
     */
    public fun clearFinishReason() {
      _builder.clearFinishReason()
    }

    /**
     * ```
     * Seed used to generate this artifact
     * ```
     *
     * `uint32 seed = 10 [json_name = "seed"];`
     */
    public var seed: kotlin.Int
      @JvmName("getSeed")
      get() = _builder.getSeed()
      @JvmName("setSeed")
      set(value) {
        _builder.setSeed(value)
      }
    /**
     * ```
     * Seed used to generate this artifact
     * ```
     *
     * `uint32 seed = 10 [json_name = "seed"];`
     */
    public fun clearSeed() {
      _builder.clearSeed()
    }

    /**
     * ```
     * UUIDv4 of the artifact, used for asset lookup
     * ```
     *
     * `string uuid = 12 [json_name = "uuid"];`
     */
    public var uuid: kotlin.String
      @JvmName("getUuid")
      get() = _builder.getUuid()
      @JvmName("setUuid")
      set(value) {
        _builder.setUuid(value)
      }
    /**
     * ```
     * UUIDv4 of the artifact, used for asset lookup
     * ```
     *
     * `string uuid = 12 [json_name = "uuid"];`
     */
    public fun clearUuid() {
      _builder.clearUuid()
    }

    /**
     * ```
     * Size of the artifact in bytes
     * ```
     *
     * `uint64 size = 13 [json_name = "size"];`
     */
    public var size: kotlin.Long
      @JvmName("getSize")
      get() = _builder.getSize()
      @JvmName("setSize")
      set(value) {
        _builder.setSize(value)
      }
    /**
     * ```
     * Size of the artifact in bytes
     * ```
     *
     * `uint64 size = 13 [json_name = "size"];`
     */
    public fun clearSize() {
      _builder.clearSize()
    }
    public val dataCase: com.stabilityai.platformapis.generation.v1.Artifact.DataCase
      @JvmName("getDataCase")
      get() = _builder.getDataCase()

    public fun clearData() {
      _builder.clearData()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.stabilityai.platformapis.generation.v1.Artifact.copy(block: com.stabilityai.platformapis.generation.v1.ArtifactKt.Dsl.() -> kotlin.Unit): com.stabilityai.platformapis.generation.v1.Artifact =
  com.stabilityai.platformapis.generation.v1.ArtifactKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.stabilityai.platformapis.generation.v1.ArtifactOrBuilder.tokensOrNull: com.stabilityai.platformapis.generation.v1.Tokens?
  get() = if (hasTokens()) getTokens() else null

public val com.stabilityai.platformapis.generation.v1.ArtifactOrBuilder.classifierOrNull: com.stabilityai.platformapis.generation.v1.ClassifierParameters?
  get() = if (hasClassifier()) getClassifier() else null

public val com.stabilityai.platformapis.generation.v1.ArtifactOrBuilder.tensorOrNull: com.tensors.Tensor?
  get() = if (hasTensor()) getTensor() else null

