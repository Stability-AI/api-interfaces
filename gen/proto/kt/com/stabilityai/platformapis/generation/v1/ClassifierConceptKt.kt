// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: stability_api/platform/generation/v1/generation.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.stabilityai.platformapis.generation.v1;

@kotlin.jvm.JvmName("-initializeclassifierConcept")
public inline fun classifierConcept(block: com.stabilityai.platformapis.generation.v1.ClassifierConceptKt.Dsl.() -> kotlin.Unit): com.stabilityai.platformapis.generation.v1.ClassifierConcept =
  com.stabilityai.platformapis.generation.v1.ClassifierConceptKt.Dsl._create(com.stabilityai.platformapis.generation.v1.ClassifierConcept.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `stabilityai.platformapis.generation.v1.ClassifierConcept`
 */
public object ClassifierConceptKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.stabilityai.platformapis.generation.v1.ClassifierConcept.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.stabilityai.platformapis.generation.v1.ClassifierConcept.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.stabilityai.platformapis.generation.v1.ClassifierConcept = _builder.build()

    /**
     * `string concept = 1 [json_name = "concept"];`
     */
    public var concept: kotlin.String
      @JvmName("getConcept")
      get() = _builder.getConcept()
      @JvmName("setConcept")
      set(value) {
        _builder.setConcept(value)
      }
    /**
     * `string concept = 1 [json_name = "concept"];`
     */
    public fun clearConcept() {
      _builder.clearConcept()
    }

    /**
     * `optional float threshold = 2 [json_name = "threshold"];`
     */
    public var threshold: kotlin.Float
      @JvmName("getThreshold")
      get() = _builder.getThreshold()
      @JvmName("setThreshold")
      set(value) {
        _builder.setThreshold(value)
      }
    /**
     * `optional float threshold = 2 [json_name = "threshold"];`
     */
    public fun clearThreshold() {
      _builder.clearThreshold()
    }
    /**
     * `optional float threshold = 2 [json_name = "threshold"];`
     * @return Whether the threshold field is set.
     */
    public fun hasThreshold(): kotlin.Boolean {
      return _builder.hasThreshold()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.stabilityai.platformapis.generation.v1.ClassifierConcept.copy(block: com.stabilityai.platformapis.generation.v1.ClassifierConceptKt.Dsl.() -> kotlin.Unit): com.stabilityai.platformapis.generation.v1.ClassifierConcept =
  com.stabilityai.platformapis.generation.v1.ClassifierConceptKt.Dsl._create(this.toBuilder()).apply { block() }._build()

