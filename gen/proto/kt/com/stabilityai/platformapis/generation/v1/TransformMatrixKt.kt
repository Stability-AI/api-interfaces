// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: stabilityai/platformapis/generation/v1/generation.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.stabilityai.platformapis.generation.v1;

@kotlin.jvm.JvmName("-initializetransformMatrix")
public inline fun transformMatrix(block: com.stabilityai.platformapis.generation.v1.TransformMatrixKt.Dsl.() -> kotlin.Unit): com.stabilityai.platformapis.generation.v1.TransformMatrix =
  com.stabilityai.platformapis.generation.v1.TransformMatrixKt.Dsl._create(com.stabilityai.platformapis.generation.v1.TransformMatrix.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `stabilityai.platformapis.generation.v1.TransformMatrix`
 */
public object TransformMatrixKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.stabilityai.platformapis.generation.v1.TransformMatrix.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.stabilityai.platformapis.generation.v1.TransformMatrix.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.stabilityai.platformapis.generation.v1.TransformMatrix = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class DataProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * Column-major 3x3 or 4x4 perspective matrix
     * [sx, 10, 20, tx]   [x]
     * [01, sy, 21, ty] . [y]
     * [02, 12, sz, tz]   [z]
     * [03, 13, 23, 33]   [1]
     * ```
     *
     * `repeated float data = 1 [json_name = "data", packed = true];`
     */
     public val data: com.google.protobuf.kotlin.DslList<kotlin.Float, DataProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getDataList()
      )
    /**
     * ```
     * Column-major 3x3 or 4x4 perspective matrix
     * [sx, 10, 20, tx]   [x]
     * [01, sy, 21, ty] . [y]
     * [02, 12, sz, tz]   [z]
     * [03, 13, 23, 33]   [1]
     * ```
     *
     * `repeated float data = 1 [json_name = "data", packed = true];`
     * @param value The data to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addData")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, DataProxy>.add(value: kotlin.Float) {
      _builder.addData(value)
    }/**
     * ```
     * Column-major 3x3 or 4x4 perspective matrix
     * [sx, 10, 20, tx]   [x]
     * [01, sy, 21, ty] . [y]
     * [02, 12, sz, tz]   [z]
     * [03, 13, 23, 33]   [1]
     * ```
     *
     * `repeated float data = 1 [json_name = "data", packed = true];`
     * @param value The data to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignData")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, DataProxy>.plusAssign(value: kotlin.Float) {
      add(value)
    }/**
     * ```
     * Column-major 3x3 or 4x4 perspective matrix
     * [sx, 10, 20, tx]   [x]
     * [01, sy, 21, ty] . [y]
     * [02, 12, sz, tz]   [z]
     * [03, 13, 23, 33]   [1]
     * ```
     *
     * `repeated float data = 1 [json_name = "data", packed = true];`
     * @param values The data to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllData")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, DataProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Float>) {
      _builder.addAllData(values)
    }/**
     * ```
     * Column-major 3x3 or 4x4 perspective matrix
     * [sx, 10, 20, tx]   [x]
     * [01, sy, 21, ty] . [y]
     * [02, 12, sz, tz]   [z]
     * [03, 13, 23, 33]   [1]
     * ```
     *
     * `repeated float data = 1 [json_name = "data", packed = true];`
     * @param values The data to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllData")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, DataProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Float>) {
      addAll(values)
    }/**
     * ```
     * Column-major 3x3 or 4x4 perspective matrix
     * [sx, 10, 20, tx]   [x]
     * [01, sy, 21, ty] . [y]
     * [02, 12, sz, tz]   [z]
     * [03, 13, 23, 33]   [1]
     * ```
     *
     * `repeated float data = 1 [json_name = "data", packed = true];`
     * @param index The index to set the value at.
     * @param value The data to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setData")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, DataProxy>.set(index: kotlin.Int, value: kotlin.Float) {
      _builder.setData(index, value)
    }/**
     * ```
     * Column-major 3x3 or 4x4 perspective matrix
     * [sx, 10, 20, tx]   [x]
     * [01, sy, 21, ty] . [y]
     * [02, 12, sz, tz]   [z]
     * [03, 13, 23, 33]   [1]
     * ```
     *
     * `repeated float data = 1 [json_name = "data", packed = true];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearData")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, DataProxy>.clear() {
      _builder.clearData()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun com.stabilityai.platformapis.generation.v1.TransformMatrix.copy(block: com.stabilityai.platformapis.generation.v1.TransformMatrixKt.Dsl.() -> kotlin.Unit): com.stabilityai.platformapis.generation.v1.TransformMatrix =
  com.stabilityai.platformapis.generation.v1.TransformMatrixKt.Dsl._create(this.toBuilder()).apply { block() }._build()

