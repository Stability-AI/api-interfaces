// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: stability_api/platform/generation/v1/generation.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.stabilityai.platformapis.generation.v1;

@kotlin.jvm.JvmName("-initializesamplerParameters")
public inline fun samplerParameters(block: com.stabilityai.platformapis.generation.v1.SamplerParametersKt.Dsl.() -> kotlin.Unit): com.stabilityai.platformapis.generation.v1.SamplerParameters =
  com.stabilityai.platformapis.generation.v1.SamplerParametersKt.Dsl._create(com.stabilityai.platformapis.generation.v1.SamplerParameters.newBuilder()).apply { block() }._build()
/**
 * ```
 * Parameters that affect the behavior of the sampler, typically used for CFG.
 * ```
 *
 * Protobuf type `stabilityai.platformapis.generation.v1.SamplerParameters`
 */
public object SamplerParametersKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.stabilityai.platformapis.generation.v1.SamplerParameters.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.stabilityai.platformapis.generation.v1.SamplerParameters.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.stabilityai.platformapis.generation.v1.SamplerParameters = _builder.build()

    /**
     * `optional float eta = 1 [json_name = "eta"];`
     */
    public var eta: kotlin.Float
      @JvmName("getEta")
      get() = _builder.getEta()
      @JvmName("setEta")
      set(value) {
        _builder.setEta(value)
      }
    /**
     * `optional float eta = 1 [json_name = "eta"];`
     */
    public fun clearEta() {
      _builder.clearEta()
    }
    /**
     * `optional float eta = 1 [json_name = "eta"];`
     * @return Whether the eta field is set.
     */
    public fun hasEta(): kotlin.Boolean {
      return _builder.hasEta()
    }

    /**
     * `optional uint64 sampling_steps = 2 [json_name = "samplingSteps"];`
     */
    public var samplingSteps: kotlin.Long
      @JvmName("getSamplingSteps")
      get() = _builder.getSamplingSteps()
      @JvmName("setSamplingSteps")
      set(value) {
        _builder.setSamplingSteps(value)
      }
    /**
     * `optional uint64 sampling_steps = 2 [json_name = "samplingSteps"];`
     */
    public fun clearSamplingSteps() {
      _builder.clearSamplingSteps()
    }
    /**
     * `optional uint64 sampling_steps = 2 [json_name = "samplingSteps"];`
     * @return Whether the samplingSteps field is set.
     */
    public fun hasSamplingSteps(): kotlin.Boolean {
      return _builder.hasSamplingSteps()
    }

    /**
     * `optional uint64 latent_channels = 3 [json_name = "latentChannels"];`
     */
    public var latentChannels: kotlin.Long
      @JvmName("getLatentChannels")
      get() = _builder.getLatentChannels()
      @JvmName("setLatentChannels")
      set(value) {
        _builder.setLatentChannels(value)
      }
    /**
     * `optional uint64 latent_channels = 3 [json_name = "latentChannels"];`
     */
    public fun clearLatentChannels() {
      _builder.clearLatentChannels()
    }
    /**
     * `optional uint64 latent_channels = 3 [json_name = "latentChannels"];`
     * @return Whether the latentChannels field is set.
     */
    public fun hasLatentChannels(): kotlin.Boolean {
      return _builder.hasLatentChannels()
    }

    /**
     * `optional uint64 downsampling_factor = 4 [json_name = "downsamplingFactor"];`
     */
    public var downsamplingFactor: kotlin.Long
      @JvmName("getDownsamplingFactor")
      get() = _builder.getDownsamplingFactor()
      @JvmName("setDownsamplingFactor")
      set(value) {
        _builder.setDownsamplingFactor(value)
      }
    /**
     * `optional uint64 downsampling_factor = 4 [json_name = "downsamplingFactor"];`
     */
    public fun clearDownsamplingFactor() {
      _builder.clearDownsamplingFactor()
    }
    /**
     * `optional uint64 downsampling_factor = 4 [json_name = "downsamplingFactor"];`
     * @return Whether the downsamplingFactor field is set.
     */
    public fun hasDownsamplingFactor(): kotlin.Boolean {
      return _builder.hasDownsamplingFactor()
    }

    /**
     * `optional float cfg_scale = 5 [json_name = "cfgScale"];`
     */
    public var cfgScale: kotlin.Float
      @JvmName("getCfgScale")
      get() = _builder.getCfgScale()
      @JvmName("setCfgScale")
      set(value) {
        _builder.setCfgScale(value)
      }
    /**
     * `optional float cfg_scale = 5 [json_name = "cfgScale"];`
     */
    public fun clearCfgScale() {
      _builder.clearCfgScale()
    }
    /**
     * `optional float cfg_scale = 5 [json_name = "cfgScale"];`
     * @return Whether the cfgScale field is set.
     */
    public fun hasCfgScale(): kotlin.Boolean {
      return _builder.hasCfgScale()
    }

    /**
     * ```
     * defaults to 0.99
     * ```
     *
     * `optional float init_noise_scale = 6 [json_name = "initNoiseScale"];`
     */
    public var initNoiseScale: kotlin.Float
      @JvmName("getInitNoiseScale")
      get() = _builder.getInitNoiseScale()
      @JvmName("setInitNoiseScale")
      set(value) {
        _builder.setInitNoiseScale(value)
      }
    /**
     * ```
     * defaults to 0.99
     * ```
     *
     * `optional float init_noise_scale = 6 [json_name = "initNoiseScale"];`
     */
    public fun clearInitNoiseScale() {
      _builder.clearInitNoiseScale()
    }
    /**
     * ```
     * defaults to 0.99
     * ```
     *
     * `optional float init_noise_scale = 6 [json_name = "initNoiseScale"];`
     * @return Whether the initNoiseScale field is set.
     */
    public fun hasInitNoiseScale(): kotlin.Boolean {
      return _builder.hasInitNoiseScale()
    }

    /**
     * ```
     * defaults to 0.99
     * ```
     *
     * `optional float step_noise_scale = 7 [json_name = "stepNoiseScale"];`
     */
    public var stepNoiseScale: kotlin.Float
      @JvmName("getStepNoiseScale")
      get() = _builder.getStepNoiseScale()
      @JvmName("setStepNoiseScale")
      set(value) {
        _builder.setStepNoiseScale(value)
      }
    /**
     * ```
     * defaults to 0.99
     * ```
     *
     * `optional float step_noise_scale = 7 [json_name = "stepNoiseScale"];`
     */
    public fun clearStepNoiseScale() {
      _builder.clearStepNoiseScale()
    }
    /**
     * ```
     * defaults to 0.99
     * ```
     *
     * `optional float step_noise_scale = 7 [json_name = "stepNoiseScale"];`
     * @return Whether the stepNoiseScale field is set.
     */
    public fun hasStepNoiseScale(): kotlin.Boolean {
      return _builder.hasStepNoiseScale()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.stabilityai.platformapis.generation.v1.SamplerParameters.copy(block: com.stabilityai.platformapis.generation.v1.SamplerParametersKt.Dsl.() -> kotlin.Unit): com.stabilityai.platformapis.generation.v1.SamplerParameters =
  com.stabilityai.platformapis.generation.v1.SamplerParametersKt.Dsl._create(this.toBuilder()).apply { block() }._build()

