// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: stabilityai/platformapis/generation/v1/generation.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.stabilityai.platformapis.generation.v1;

@kotlin.jvm.JvmName("-initializemodel")
public inline fun model(block: com.stabilityai.platformapis.generation.v1.ModelKt.Dsl.() -> kotlin.Unit): com.stabilityai.platformapis.generation.v1.Model =
  com.stabilityai.platformapis.generation.v1.ModelKt.Dsl._create(com.stabilityai.platformapis.generation.v1.Model.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `stabilityai.platformapis.generation.v1.Model`
 */
public object ModelKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.stabilityai.platformapis.generation.v1.Model.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.stabilityai.platformapis.generation.v1.Model.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.stabilityai.platformapis.generation.v1.Model = _builder.build()

    /**
     * `.stabilityai.platformapis.generation.v1.ModelArchitecture architecture = 1 [json_name = "architecture"];`
     */
    public var architecture: com.stabilityai.platformapis.generation.v1.ModelArchitecture
      @JvmName("getArchitecture")
      get() = _builder.getArchitecture()
      @JvmName("setArchitecture")
      set(value) {
        _builder.setArchitecture(value)
      }
    public var architectureValue: kotlin.Int
      @JvmName("getArchitectureValue")
      get() = _builder.getArchitectureValue()
      @JvmName("setArchitectureValue")
      set(value) {
        _builder.setArchitectureValue(value)
      }
    /**
     * `.stabilityai.platformapis.generation.v1.ModelArchitecture architecture = 1 [json_name = "architecture"];`
     */
    public fun clearArchitecture() {
      _builder.clearArchitecture()
    }

    /**
     * `string publisher = 2 [json_name = "publisher"];`
     */
    public var publisher: kotlin.String
      @JvmName("getPublisher")
      get() = _builder.getPublisher()
      @JvmName("setPublisher")
      set(value) {
        _builder.setPublisher(value)
      }
    /**
     * `string publisher = 2 [json_name = "publisher"];`
     */
    public fun clearPublisher() {
      _builder.clearPublisher()
    }

    /**
     * `string dataset = 3 [json_name = "dataset"];`
     */
    public var dataset: kotlin.String
      @JvmName("getDataset")
      get() = _builder.getDataset()
      @JvmName("setDataset")
      set(value) {
        _builder.setDataset(value)
      }
    /**
     * `string dataset = 3 [json_name = "dataset"];`
     */
    public fun clearDataset() {
      _builder.clearDataset()
    }

    /**
     * `float version = 4 [json_name = "version"];`
     */
    public var version: kotlin.Float
      @JvmName("getVersion")
      get() = _builder.getVersion()
      @JvmName("setVersion")
      set(value) {
        _builder.setVersion(value)
      }
    /**
     * `float version = 4 [json_name = "version"];`
     */
    public fun clearVersion() {
      _builder.clearVersion()
    }

    /**
     * `string semantic_version = 5 [json_name = "semanticVersion"];`
     */
    public var semanticVersion: kotlin.String
      @JvmName("getSemanticVersion")
      get() = _builder.getSemanticVersion()
      @JvmName("setSemanticVersion")
      set(value) {
        _builder.setSemanticVersion(value)
      }
    /**
     * `string semantic_version = 5 [json_name = "semanticVersion"];`
     */
    public fun clearSemanticVersion() {
      _builder.clearSemanticVersion()
    }

    /**
     * `string alias = 6 [json_name = "alias"];`
     */
    public var alias: kotlin.String
      @JvmName("getAlias")
      get() = _builder.getAlias()
      @JvmName("setAlias")
      set(value) {
        _builder.setAlias(value)
      }
    /**
     * `string alias = 6 [json_name = "alias"];`
     */
    public fun clearAlias() {
      _builder.clearAlias()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.stabilityai.platformapis.generation.v1.Model.copy(block: com.stabilityai.platformapis.generation.v1.ModelKt.Dsl.() -> kotlin.Unit): com.stabilityai.platformapis.generation.v1.Model =
  com.stabilityai.platformapis.generation.v1.ModelKt.Dsl._create(this.toBuilder()).apply { block() }._build()

