// Code generated by connect-kotlin. DO NOT EDIT.
//
// Source: stabilityai/platformapis/dashboard/v1/dashboard.proto
//
package com.stabilityai.api.dashboard.v1

import build.buf.connect.Headers
import build.buf.connect.ResponseMessage

public interface DashboardServiceClientInterface {
  /**
   *  Get info
   */
  public suspend fun getMe(request: EmptyRequest, headers: Headers = emptyMap()):
      ResponseMessage<User>

  public suspend fun getOrganization(request: GetOrganizationRequest, headers: Headers =
      emptyMap()): ResponseMessage<Organization>

  public suspend fun getMetrics(request: GetMetricsRequest, headers: Headers = emptyMap()):
      ResponseMessage<Metrics>

  /**
   *  API key management
   */
  public suspend fun createAPIKey(request: APIKeyRequest, headers: Headers = emptyMap()):
      ResponseMessage<APIKey>

  public suspend fun deleteAPIKey(request: APIKeyFindRequest, headers: Headers = emptyMap()):
      ResponseMessage<APIKey>

  /**
   *  User settings
   */
  public suspend fun updateDefaultOrganization(request: UpdateDefaultOrganizationRequest,
      headers: Headers = emptyMap()): ResponseMessage<User>

  public suspend fun getClientSettings(request: EmptyRequest, headers: Headers = emptyMap()):
      ResponseMessage<ClientSettings>

  public suspend fun setClientSettings(request: ClientSettings, headers: Headers = emptyMap()):
      ResponseMessage<ClientSettings>

  public suspend fun updateUserInfo(request: UpdateUserInfoRequest, headers: Headers = emptyMap()):
      ResponseMessage<User>

  public suspend fun createPasswordChangeTicket(request: EmptyRequest, headers: Headers =
      emptyMap()): ResponseMessage<UserPasswordChangeTicket>

  public suspend fun deleteAccount(request: EmptyRequest, headers: Headers = emptyMap()):
      ResponseMessage<User>

  /**
   *  Payment functions
   */
  public suspend fun createCharge(request: CreateChargeRequest, headers: Headers = emptyMap()):
      ResponseMessage<Charge>

  public suspend fun getCharges(request: GetChargesRequest, headers: Headers = emptyMap()):
      ResponseMessage<Charges>

  public suspend fun createAutoChargeIntent(request: CreateAutoChargeIntentRequest, headers: Headers
      = emptyMap()): ResponseMessage<AutoChargeIntent>

  public suspend fun updateAutoChargeIntent(request: CreateAutoChargeIntentRequest, headers: Headers
      = emptyMap()): ResponseMessage<AutoChargeIntent>

  public suspend fun getAutoChargeIntent(request: GetAutoChargeRequest, headers: Headers =
      emptyMap()): ResponseMessage<AutoChargeIntent>
}
