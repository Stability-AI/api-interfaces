// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: stabilityai/platformapis/dashboard/v1/dashboard.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.stabilityai.api.dashboard.v1;

@kotlin.jvm.JvmName("-initializemetrics")
public inline fun metrics(block: com.stabilityai.api.dashboard.v1.MetricsKt.Dsl.() -> kotlin.Unit): com.stabilityai.api.dashboard.v1.Metrics =
  com.stabilityai.api.dashboard.v1.MetricsKt.Dsl._create(com.stabilityai.api.dashboard.v1.Metrics.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `stabilityai.api.dashboard.v1.Metrics`
 */
public object MetricsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.stabilityai.api.dashboard.v1.Metrics.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.stabilityai.api.dashboard.v1.Metrics.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.stabilityai.api.dashboard.v1.Metrics = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class MetricsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .stabilityai.api.dashboard.v1.UsageMetric metrics = 1 [json_name = "metrics"];`
     */
     public val metrics: com.google.protobuf.kotlin.DslList<com.stabilityai.api.dashboard.v1.UsageMetric, MetricsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getMetricsList()
      )
    /**
     * `repeated .stabilityai.api.dashboard.v1.UsageMetric metrics = 1 [json_name = "metrics"];`
     * @param value The metrics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addMetrics")
    public fun com.google.protobuf.kotlin.DslList<com.stabilityai.api.dashboard.v1.UsageMetric, MetricsProxy>.add(value: com.stabilityai.api.dashboard.v1.UsageMetric) {
      _builder.addMetrics(value)
    }
    /**
     * `repeated .stabilityai.api.dashboard.v1.UsageMetric metrics = 1 [json_name = "metrics"];`
     * @param value The metrics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignMetrics")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.stabilityai.api.dashboard.v1.UsageMetric, MetricsProxy>.plusAssign(value: com.stabilityai.api.dashboard.v1.UsageMetric) {
      add(value)
    }
    /**
     * `repeated .stabilityai.api.dashboard.v1.UsageMetric metrics = 1 [json_name = "metrics"];`
     * @param values The metrics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllMetrics")
    public fun com.google.protobuf.kotlin.DslList<com.stabilityai.api.dashboard.v1.UsageMetric, MetricsProxy>.addAll(values: kotlin.collections.Iterable<com.stabilityai.api.dashboard.v1.UsageMetric>) {
      _builder.addAllMetrics(values)
    }
    /**
     * `repeated .stabilityai.api.dashboard.v1.UsageMetric metrics = 1 [json_name = "metrics"];`
     * @param values The metrics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllMetrics")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.stabilityai.api.dashboard.v1.UsageMetric, MetricsProxy>.plusAssign(values: kotlin.collections.Iterable<com.stabilityai.api.dashboard.v1.UsageMetric>) {
      addAll(values)
    }
    /**
     * `repeated .stabilityai.api.dashboard.v1.UsageMetric metrics = 1 [json_name = "metrics"];`
     * @param index The index to set the value at.
     * @param value The metrics to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setMetrics")
    public operator fun com.google.protobuf.kotlin.DslList<com.stabilityai.api.dashboard.v1.UsageMetric, MetricsProxy>.set(index: kotlin.Int, value: com.stabilityai.api.dashboard.v1.UsageMetric) {
      _builder.setMetrics(index, value)
    }
    /**
     * `repeated .stabilityai.api.dashboard.v1.UsageMetric metrics = 1 [json_name = "metrics"];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearMetrics")
    public fun com.google.protobuf.kotlin.DslList<com.stabilityai.api.dashboard.v1.UsageMetric, MetricsProxy>.clear() {
      _builder.clearMetrics()
    }


    /**
     * `.stabilityai.api.dashboard.v1.TotalMetricsData total = 2 [json_name = "total"];`
     */
    public var total: com.stabilityai.api.dashboard.v1.TotalMetricsData
      @JvmName("getTotal")
      get() = _builder.getTotal()
      @JvmName("setTotal")
      set(value) {
        _builder.setTotal(value)
      }
    /**
     * `.stabilityai.api.dashboard.v1.TotalMetricsData total = 2 [json_name = "total"];`
     */
    public fun clearTotal() {
      _builder.clearTotal()
    }
    /**
     * `.stabilityai.api.dashboard.v1.TotalMetricsData total = 2 [json_name = "total"];`
     * @return Whether the total field is set.
     */
    public fun hasTotal(): kotlin.Boolean {
      return _builder.hasTotal()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.stabilityai.api.dashboard.v1.Metrics.copy(block: com.stabilityai.api.dashboard.v1.MetricsKt.Dsl.() -> kotlin.Unit): com.stabilityai.api.dashboard.v1.Metrics =
  com.stabilityai.api.dashboard.v1.MetricsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.stabilityai.api.dashboard.v1.MetricsOrBuilder.totalOrNull: com.stabilityai.api.dashboard.v1.TotalMetricsData?
  get() = if (hasTotal()) getTotal() else null

