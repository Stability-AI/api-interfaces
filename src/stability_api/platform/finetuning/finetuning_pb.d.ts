// @generated by protoc-gen-es v1.3.0
// @generated from file stability_api/platform/finetuning/finetuning.proto (package gooseai, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Struct } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum gooseai.FineTuningMode
 */
export declare enum FineTuningMode {
  /**
   * No mode specified
   *
   * @generated from enum value: FINE_TUNING_MODE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Fine tuning a face model
   *
   * @generated from enum value: FINE_TUNING_MODE_FACE = 1;
   */
  FACE = 1,

  /**
   * Fine tuning a style model
   *
   * @generated from enum value: FINE_TUNING_MODE_STYLE = 2;
   */
  STYLE = 2,

  /**
   * Fine tuning an object model
   *
   * @generated from enum value: FINE_TUNING_MODE_OBJECT = 3;
   */
  OBJECT = 3,
}

/**
 * @generated from enum gooseai.FineTuningStatus
 */
export declare enum FineTuningStatus {
  /**
   * Model not yet started
   *
   * @generated from enum value: FINE_TUNING_STATUS_NOT_STARTED = 0;
   */
  NOT_STARTED = 0,

  /**
   * Model is currently running
   *
   * @generated from enum value: FINE_TUNING_STATUS_RUNNING = 1;
   */
  RUNNING = 1,

  /**
   * Model has completed successfully
   *
   * @generated from enum value: FINE_TUNING_STATUS_COMPLETED = 2;
   */
  COMPLETED = 2,

  /**
   * Model has failed
   *
   * @generated from enum value: FINE_TUNING_STATUS_FAILED = 3;
   */
  FAILED = 3,

  /**
   * Model has been submitted
   *
   * @generated from enum value: FINE_TUNING_STATUS_SUBMITTED = 4;
   */
  SUBMITTED = 4,
}

/**
 * @generated from message gooseai.FineTuningModel
 */
export declare class FineTuningModel extends Message<FineTuningModel> {
  /**
   * ID of the model, UUIDv4
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * ID of user who created the model
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * a readable model name
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * the mode of the model
   *
   * @generated from field: optional gooseai.FineTuningMode mode = 4;
   */
  mode?: FineTuningMode;

  /**
   * freeform text description of object, should only be set when mode is OBJECT
   *
   * @generated from field: optional string object_prompt = 5;
   */
  objectPrompt?: string;

  /**
   * project ID with assets to be used for fine tuning
   *
   * @generated from field: string project_id = 6;
   */
  projectId: string;

  /**
   * duration in seconds for how long the model took to train
   *
   * @generated from field: double duration = 7;
   */
  duration: number;

  /**
   * the current status of the model
   *
   * @generated from field: gooseai.FineTuningStatus status = 8;
   */
  status: FineTuningStatus;

  /**
   * the engineId of a fine-tuneable Stability model
   *
   * @generated from field: string engine_id = 9;
   */
  engineId: string;

  /**
   * If a model's training failed, this will contain the reason
   *
   * @generated from field: optional string failure_reason = 10;
   */
  failureReason?: string;

  constructor(data?: PartialMessage<FineTuningModel>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "gooseai.FineTuningModel";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FineTuningModel;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FineTuningModel;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FineTuningModel;

  static equals(a: FineTuningModel | PlainMessage<FineTuningModel> | undefined, b: FineTuningModel | PlainMessage<FineTuningModel> | undefined): boolean;
}

/**
 * @generated from message gooseai.CreateModelRequest
 */
export declare class CreateModelRequest extends Message<CreateModelRequest> {
  /**
   * a readable model name
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * the mode of the model
   *
   * @generated from field: optional gooseai.FineTuningMode mode = 2;
   */
  mode?: FineTuningMode;

  /**
   * freeform text description of object, should only be set when mode is OBJECT
   *
   * @generated from field: optional string object_prompt = 3;
   */
  objectPrompt?: string;

  /**
   * the project_id with assets to be used for fine tuning
   *
   * @generated from field: string project_id = 4;
   */
  projectId: string;

  /**
   * the engineId of an fine-tuneable Stability model
   *
   * @generated from field: string engine_id = 5;
   */
  engineId: string;

  /**
   * for development use
   *
   * @generated from field: optional google.protobuf.Struct extras = 2047;
   */
  extras?: Struct;

  constructor(data?: PartialMessage<CreateModelRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "gooseai.CreateModelRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateModelRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateModelRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateModelRequest;

  static equals(a: CreateModelRequest | PlainMessage<CreateModelRequest> | undefined, b: CreateModelRequest | PlainMessage<CreateModelRequest> | undefined): boolean;
}

/**
 * @generated from message gooseai.CreateModelResponse
 */
export declare class CreateModelResponse extends Message<CreateModelResponse> {
  /**
   * @generated from field: gooseai.FineTuningModel model = 1;
   */
  model?: FineTuningModel;

  constructor(data?: PartialMessage<CreateModelResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "gooseai.CreateModelResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateModelResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateModelResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateModelResponse;

  static equals(a: CreateModelResponse | PlainMessage<CreateModelResponse> | undefined, b: CreateModelResponse | PlainMessage<CreateModelResponse> | undefined): boolean;
}

/**
 * @generated from message gooseai.GetModelRequest
 */
export declare class GetModelRequest extends Message<GetModelRequest> {
  /**
   * ID of the model
   *
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<GetModelRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "gooseai.GetModelRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetModelRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetModelRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetModelRequest;

  static equals(a: GetModelRequest | PlainMessage<GetModelRequest> | undefined, b: GetModelRequest | PlainMessage<GetModelRequest> | undefined): boolean;
}

/**
 * @generated from message gooseai.GetModelResponse
 */
export declare class GetModelResponse extends Message<GetModelResponse> {
  /**
   * @generated from field: gooseai.FineTuningModel model = 1;
   */
  model?: FineTuningModel;

  constructor(data?: PartialMessage<GetModelResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "gooseai.GetModelResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetModelResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetModelResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetModelResponse;

  static equals(a: GetModelResponse | PlainMessage<GetModelResponse> | undefined, b: GetModelResponse | PlainMessage<GetModelResponse> | undefined): boolean;
}

/**
 * @generated from message gooseai.UpdateModelRequest
 */
export declare class UpdateModelRequest extends Message<UpdateModelRequest> {
  /**
   * the id of the model
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * a readable model name
   *
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * the mode of the model
   *
   * @generated from field: optional gooseai.FineTuningMode mode = 3;
   */
  mode?: FineTuningMode;

  /**
   * freeform text description of object, should only be set when mode is OBJECT
   *
   * @generated from field: optional string object_prompt = 4;
   */
  objectPrompt?: string;

  /**
   * the engineId of an fine-tuneable Stability model
   *
   * @generated from field: optional string engine_id = 5;
   */
  engineId?: string;

  constructor(data?: PartialMessage<UpdateModelRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "gooseai.UpdateModelRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateModelRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateModelRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateModelRequest;

  static equals(a: UpdateModelRequest | PlainMessage<UpdateModelRequest> | undefined, b: UpdateModelRequest | PlainMessage<UpdateModelRequest> | undefined): boolean;
}

/**
 * @generated from message gooseai.UpdateModelResponse
 */
export declare class UpdateModelResponse extends Message<UpdateModelResponse> {
  /**
   * @generated from field: gooseai.FineTuningModel model = 1;
   */
  model?: FineTuningModel;

  constructor(data?: PartialMessage<UpdateModelResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "gooseai.UpdateModelResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateModelResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateModelResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateModelResponse;

  static equals(a: UpdateModelResponse | PlainMessage<UpdateModelResponse> | undefined, b: UpdateModelResponse | PlainMessage<UpdateModelResponse> | undefined): boolean;
}

/**
 * @generated from message gooseai.DeleteModelRequest
 */
export declare class DeleteModelRequest extends Message<DeleteModelRequest> {
  /**
   * ID of the model to delete
   *
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<DeleteModelRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "gooseai.DeleteModelRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteModelRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteModelRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteModelRequest;

  static equals(a: DeleteModelRequest | PlainMessage<DeleteModelRequest> | undefined, b: DeleteModelRequest | PlainMessage<DeleteModelRequest> | undefined): boolean;
}

/**
 * @generated from message gooseai.DeleteModelResponse
 */
export declare class DeleteModelResponse extends Message<DeleteModelResponse> {
  /**
   * @generated from field: gooseai.FineTuningModel model = 1;
   */
  model?: FineTuningModel;

  constructor(data?: PartialMessage<DeleteModelResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "gooseai.DeleteModelResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteModelResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteModelResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteModelResponse;

  static equals(a: DeleteModelResponse | PlainMessage<DeleteModelResponse> | undefined, b: DeleteModelResponse | PlainMessage<DeleteModelResponse> | undefined): boolean;
}

/**
 * @generated from message gooseai.ResubmitModelRequest
 */
export declare class ResubmitModelRequest extends Message<ResubmitModelRequest> {
  /**
   * ID of the model to resubmit
   *
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<ResubmitModelRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "gooseai.ResubmitModelRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResubmitModelRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResubmitModelRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResubmitModelRequest;

  static equals(a: ResubmitModelRequest | PlainMessage<ResubmitModelRequest> | undefined, b: ResubmitModelRequest | PlainMessage<ResubmitModelRequest> | undefined): boolean;
}

/**
 * @generated from message gooseai.ResubmitModelResponse
 */
export declare class ResubmitModelResponse extends Message<ResubmitModelResponse> {
  /**
   * @generated from field: gooseai.FineTuningModel model = 1;
   */
  model?: FineTuningModel;

  constructor(data?: PartialMessage<ResubmitModelResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "gooseai.ResubmitModelResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResubmitModelResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResubmitModelResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResubmitModelResponse;

  static equals(a: ResubmitModelResponse | PlainMessage<ResubmitModelResponse> | undefined, b: ResubmitModelResponse | PlainMessage<ResubmitModelResponse> | undefined): boolean;
}

/**
 * @generated from message gooseai.ListModelsRequest
 */
export declare class ListModelsRequest extends Message<ListModelsRequest> {
  /**
   * @generated from oneof gooseai.ListModelsRequest.id
   */
  id: {
    /**
     * the organization's ID
     *
     * @generated from field: string org_id = 1;
     */
    value: string;
    case: "orgId";
  } | {
    /**
     * or the user's ID
     *
     * @generated from field: string user_id = 2;
     */
    value: string;
    case: "userId";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<ListModelsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "gooseai.ListModelsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListModelsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListModelsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListModelsRequest;

  static equals(a: ListModelsRequest | PlainMessage<ListModelsRequest> | undefined, b: ListModelsRequest | PlainMessage<ListModelsRequest> | undefined): boolean;
}

/**
 * @generated from message gooseai.ListModelsResponse
 */
export declare class ListModelsResponse extends Message<ListModelsResponse> {
  /**
   * the list of models
   *
   * @generated from field: repeated gooseai.FineTuningModel models = 1;
   */
  models: FineTuningModel[];

  constructor(data?: PartialMessage<ListModelsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "gooseai.ListModelsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListModelsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListModelsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListModelsResponse;

  static equals(a: ListModelsResponse | PlainMessage<ListModelsResponse> | undefined, b: ListModelsResponse | PlainMessage<ListModelsResponse> | undefined): boolean;
}

