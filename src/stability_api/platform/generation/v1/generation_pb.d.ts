// @generated by protoc-gen-es v1.3.0
// @generated from file stability_api/platform/generation/v1/generation.proto (package stabilityai.platformapis.generation.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Struct } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Tensor } from "../../../tensors/tensors_pb.js";

/**
 * @generated from enum stabilityai.platformapis.generation.v1.FinishReason
 */
export declare enum FinishReason {
  /**
   * @generated from enum value: NULL = 0;
   */
  NULL = 0,

  /**
   * @generated from enum value: LENGTH = 1;
   */
  LENGTH = 1,

  /**
   * @generated from enum value: STOP = 2;
   */
  STOP = 2,

  /**
   * @generated from enum value: ERROR = 3;
   */
  ERROR = 3,

  /**
   * @generated from enum value: FILTER = 4;
   */
  FILTER = 4,
}

/**
 * @generated from enum stabilityai.platformapis.generation.v1.ArtifactType
 */
export declare enum ArtifactType {
  /**
   * @generated from enum value: ARTIFACT_NONE = 0;
   */
  ARTIFACT_NONE = 0,

  /**
   * @generated from enum value: ARTIFACT_IMAGE = 1;
   */
  ARTIFACT_IMAGE = 1,

  /**
   * @generated from enum value: ARTIFACT_VIDEO = 2;
   */
  ARTIFACT_VIDEO = 2,

  /**
   * @generated from enum value: ARTIFACT_TEXT = 3;
   */
  ARTIFACT_TEXT = 3,

  /**
   * @generated from enum value: ARTIFACT_TOKENS = 4;
   */
  ARTIFACT_TOKENS = 4,

  /**
   * @generated from enum value: ARTIFACT_EMBEDDING = 5;
   */
  ARTIFACT_EMBEDDING = 5,

  /**
   * @generated from enum value: ARTIFACT_CLASSIFICATIONS = 6;
   */
  ARTIFACT_CLASSIFICATIONS = 6,

  /**
   * @generated from enum value: ARTIFACT_MASK = 7;
   */
  ARTIFACT_MASK = 7,

  /**
   * @generated from enum value: ARTIFACT_LATENT = 8;
   */
  ARTIFACT_LATENT = 8,

  /**
   * @generated from enum value: ARTIFACT_TENSOR = 9;
   */
  ARTIFACT_TENSOR = 9,

  /**
   * @generated from enum value: ARTIFACT_DEPTH = 10;
   */
  ARTIFACT_DEPTH = 10,
}

/**
 * @generated from enum stabilityai.platformapis.generation.v1.MaskedAreaInit
 */
export declare enum MaskedAreaInit {
  /**
   * @generated from enum value: MASKED_AREA_INIT_ZERO = 0;
   */
  ZERO = 0,

  /**
   * @generated from enum value: MASKED_AREA_INIT_RANDOM = 1;
   */
  RANDOM = 1,

  /**
   * @generated from enum value: MASKED_AREA_INIT_ORIGINAL = 2;
   */
  ORIGINAL = 2,
}

/**
 * @generated from enum stabilityai.platformapis.generation.v1.WeightMethod
 */
export declare enum WeightMethod {
  /**
   * @generated from enum value: TEXT_ENCODER = 0;
   */
  TEXT_ENCODER = 0,

  /**
   * @generated from enum value: CROSS_ATTENTION = 1;
   */
  CROSS_ATTENTION = 1,
}

/**
 * DiffusionSampler identifies which sampler to use for Diffusion, and represents
 * the internal set of supported samplers.
 *
 * @generated from enum stabilityai.platformapis.generation.v1.DiffusionSampler
 */
export declare enum DiffusionSampler {
  /**
   * @generated from enum value: SAMPLER_DDIM = 0;
   */
  SAMPLER_DDIM = 0,

  /**
   * @generated from enum value: SAMPLER_DDPM = 1;
   */
  SAMPLER_DDPM = 1,

  /**
   * @generated from enum value: SAMPLER_K_EULER = 2;
   */
  SAMPLER_K_EULER = 2,

  /**
   * @generated from enum value: SAMPLER_K_EULER_ANCESTRAL = 3;
   */
  SAMPLER_K_EULER_ANCESTRAL = 3,

  /**
   * @generated from enum value: SAMPLER_K_HEUN = 4;
   */
  SAMPLER_K_HEUN = 4,

  /**
   * @generated from enum value: SAMPLER_K_DPM_2 = 5;
   */
  SAMPLER_K_DPM_2 = 5,

  /**
   * @generated from enum value: SAMPLER_K_DPM_2_ANCESTRAL = 6;
   */
  SAMPLER_K_DPM_2_ANCESTRAL = 6,

  /**
   * @generated from enum value: SAMPLER_K_LMS = 7;
   */
  SAMPLER_K_LMS = 7,

  /**
   * @generated from enum value: SAMPLER_K_DPMPP_2S_ANCESTRAL = 8;
   */
  SAMPLER_K_DPMPP_2S_ANCESTRAL = 8,

  /**
   * @generated from enum value: SAMPLER_K_DPMPP_2M = 9;
   */
  SAMPLER_K_DPMPP_2M = 9,

  /**
   * @generated from enum value: SAMPLER_K_DPMPP_SDE = 10;
   */
  SAMPLER_K_DPMPP_SDE = 10,
}

/**
 * Future, unimplemented.
 *
 * @generated from enum stabilityai.platformapis.generation.v1.Upscaler
 */
export declare enum Upscaler {
  /**
   * @generated from enum value: UPSCALER_RGB = 0;
   */
  RGB = 0,

  /**
   * @generated from enum value: UPSCALER_GFPGAN = 1;
   */
  GFPGAN = 1,

  /**
   * @generated from enum value: UPSCALER_ESRGAN = 2;
   */
  ESRGAN = 2,
}

/**
 * Presets for CLIP guidance.
 *
 * @generated from enum stabilityai.platformapis.generation.v1.GuidancePreset
 */
export declare enum GuidancePreset {
  /**
   * @generated from enum value: GUIDANCE_PRESET_NONE = 0;
   */
  NONE = 0,

  /**
   * @generated from enum value: GUIDANCE_PRESET_SIMPLE = 1;
   */
  SIMPLE = 1,

  /**
   * @generated from enum value: GUIDANCE_PRESET_FAST_BLUE = 2;
   */
  FAST_BLUE = 2,

  /**
   * @generated from enum value: GUIDANCE_PRESET_FAST_GREEN = 3;
   */
  FAST_GREEN = 3,

  /**
   * @generated from enum value: GUIDANCE_PRESET_SLOW = 4;
   */
  SLOW = 4,

  /**
   * @generated from enum value: GUIDANCE_PRESET_SLOWER = 5;
   */
  SLOWER = 5,

  /**
   * @generated from enum value: GUIDANCE_PRESET_SLOWEST = 6;
   */
  SLOWEST = 6,
}

/**
 * @generated from enum stabilityai.platformapis.generation.v1.ModelArchitecture
 */
export declare enum ModelArchitecture {
  /**
   * @generated from enum value: MODEL_ARCHITECTURE_NONE = 0;
   */
  NONE = 0,

  /**
   * @generated from enum value: MODEL_ARCHITECTURE_CLIP_VIT = 1;
   */
  CLIP_VIT = 1,

  /**
   * @generated from enum value: MODEL_ARCHITECTURE_CLIP_RESNET = 2;
   */
  CLIP_RESNET = 2,

  /**
   * @generated from enum value: MODEL_ARCHITECTURE_LDM = 3;
   */
  LDM = 3,
}

/**
 * @generated from enum stabilityai.platformapis.generation.v1.T2IAdapter
 */
export declare enum T2IAdapter {
  /**
   * @generated from enum value: T2IADAPTER_NONE = 0;
   */
  T2IADAPTER_NONE = 0,

  /**
   * these are all compatible with SDXL. 
   *
   * @generated from enum value: T2IADAPTER_SKETCH = 1;
   */
  T2IADAPTER_SKETCH = 1,

  /**
   * @generated from enum value: T2IADAPTER_DEPTH = 2;
   */
  T2IADAPTER_DEPTH = 2,

  /**
   * @generated from enum value: T2IADAPTER_CANNY = 3;
   */
  T2IADAPTER_CANNY = 3,
}

/**
 * If adapter_type is not None, then the user can choose what type of init_image to pass in: either an arbitrary image
 * which will then be converted to a depth map, sketch, or canny edge for the sketch, depth and canny adapters respectively,
 * or they can pass in their own depth map, sketch or canny edge. This field controls whether the init_image should
 * be interpreted as an arbitrary image to be preprocessed ready for the t2i adapter, or whether it has already been 
 * preprocessed elsewhere
 *
 * @generated from enum stabilityai.platformapis.generation.v1.T2IAdapterInit
 */
export declare enum T2IAdapterInit {
  /**
   * these are all compatible with SDXL. 
   *
   * @generated from enum value: T2IADAPTERINIT_IMAGE = 0;
   */
  T2IADAPTERINIT_IMAGE = 0,

  /**
   * @generated from enum value: T2IADAPTERINIT_ADAPTER_IMAGE = 1;
   */
  T2IADAPTERINIT_ADAPTER_IMAGE = 1,
}

/**
 * @generated from enum stabilityai.platformapis.generation.v1.Action
 */
export declare enum Action {
  /**
   * @generated from enum value: ACTION_PASSTHROUGH = 0;
   */
  PASSTHROUGH = 0,

  /**
   * @generated from enum value: ACTION_REGENERATE_DUPLICATE = 1;
   */
  REGENERATE_DUPLICATE = 1,

  /**
   * @generated from enum value: ACTION_REGENERATE = 2;
   */
  REGENERATE = 2,

  /**
   * @generated from enum value: ACTION_OBFUSCATE_DUPLICATE = 3;
   */
  OBFUSCATE_DUPLICATE = 3,

  /**
   * @generated from enum value: ACTION_OBFUSCATE = 4;
   */
  OBFUSCATE = 4,

  /**
   * @generated from enum value: ACTION_DISCARD = 5;
   */
  DISCARD = 5,
}

/**
 * @generated from enum stabilityai.platformapis.generation.v1.ClassifierMode
 */
export declare enum ClassifierMode {
  /**
   * @generated from enum value: CLSFR_MODE_ZEROSHOT = 0;
   */
  CLSFR_MODE_ZEROSHOT = 0,

  /**
   * CLSFR_MODE_ODDSRATIO = 2;
   *
   * @generated from enum value: CLSFR_MODE_MULTICLASS = 1;
   */
  CLSFR_MODE_MULTICLASS = 1,
}

/**
 * @generated from enum stabilityai.platformapis.generation.v1.InterpolateMode
 */
export declare enum InterpolateMode {
  /**
   * @generated from enum value: INTERPOLATE_LINEAR = 0;
   */
  INTERPOLATE_LINEAR = 0,

  /**
   * @generated from enum value: INTERPOLATE_RIFE = 1;
   */
  INTERPOLATE_RIFE = 1,

  /**
   * @generated from enum value: INTERPOLATE_VAE_LINEAR = 2;
   */
  INTERPOLATE_VAE_LINEAR = 2,

  /**
   * @generated from enum value: INTERPOLATE_VAE_SLERP = 3;
   */
  INTERPOLATE_VAE_SLERP = 3,

  /**
   * @generated from enum value: INTERPOLATE_FILM = 4;
   */
  INTERPOLATE_FILM = 4,
}

/**
 * @generated from enum stabilityai.platformapis.generation.v1.BorderMode
 */
export declare enum BorderMode {
  /**
   * reflect image values across the border
   *
   * @generated from enum value: BORDER_REFLECT = 0;
   */
  BORDER_REFLECT = 0,

  /**
   * replicate border values outside the image
   *
   * @generated from enum value: BORDER_REPLICATE = 1;
   */
  BORDER_REPLICATE = 1,

  /**
   * wrap around / tile the image values
   *
   * @generated from enum value: BORDER_WRAP = 2;
   */
  BORDER_WRAP = 2,

  /**
   * use 0 for locations outside the image
   *
   * @generated from enum value: BORDER_ZERO = 3;
   */
  BORDER_ZERO = 3,

  /**
   * prefill border areas with values matching the colors around the area
   *
   * @generated from enum value: BORDER_PREFILL = 4;
   */
  BORDER_PREFILL = 4,
}

/**
 * @generated from enum stabilityai.platformapis.generation.v1.ColorMatchMode
 */
export declare enum ColorMatchMode {
  /**
   * match hue, saturation, and value histograms
   *
   * @generated from enum value: COLOR_MATCH_HSV = 0;
   */
  COLOR_MATCH_HSV = 0,

  /**
   * match lightness, a, and b histograms
   *
   * @generated from enum value: COLOR_MATCH_LAB = 1;
   */
  COLOR_MATCH_LAB = 1,

  /**
   * match red, green, and blue histograms
   *
   * @generated from enum value: COLOR_MATCH_RGB = 2;
   */
  COLOR_MATCH_RGB = 2,
}

/**
 * @generated from enum stabilityai.platformapis.generation.v1.CameraType
 */
export declare enum CameraType {
  /**
   * Perspective camera
   *
   * @generated from enum value: CAMERA_PERSPECTIVE = 0;
   */
  CAMERA_PERSPECTIVE = 0,

  /**
   * Orthographic camera. Well suited for isometric animations
   *
   * @generated from enum value: CAMERA_ORTHOGRAPHIC = 1;
   */
  CAMERA_ORTHOGRAPHIC = 1,
}

/**
 * @generated from enum stabilityai.platformapis.generation.v1.RenderMode
 */
export declare enum RenderMode {
  /**
   * @generated from enum value: RENDER_MESH = 0;
   */
  RENDER_MESH = 0,

  /**
   * @generated from enum value: RENDER_POINTCLOUD = 1;
   */
  RENDER_POINTCLOUD = 1,
}

/**
 * @generated from enum stabilityai.platformapis.generation.v1.AssetAction
 */
export declare enum AssetAction {
  /**
   * @generated from enum value: ASSET_PUT = 0;
   */
  ASSET_PUT = 0,

  /**
   * @generated from enum value: ASSET_GET = 1;
   */
  ASSET_GET = 1,

  /**
   * @generated from enum value: ASSET_DELETE = 2;
   */
  ASSET_DELETE = 2,
}

/**
 * AssetUse defines how the asset is used within a project.  This enum matches
 * the values the project proto.
 *
 * @generated from enum stabilityai.platformapis.generation.v1.AssetUse
 */
export declare enum AssetUse {
  /**
   * Asset does not have use defined
   *
   * @generated from enum value: ASSET_USE_UNDEFINED = 0;
   */
  UNDEFINED = 0,

  /**
   * Asset is used as an input for the project
   *
   * @generated from enum value: ASSET_USE_INPUT = 1;
   */
  INPUT = 1,

  /**
   * Asset is an output from the project
   *
   * @generated from enum value: ASSET_USE_OUTPUT = 2;
   */
  OUTPUT = 2,

  /**
   * Asset is an output from an intermediate step of the project
   *
   * @generated from enum value: ASSET_USE_INTERMEDIATE = 3;
   */
  INTERMEDIATE = 3,

  /**
   * Asset is used as the project file for the project
   *
   * @generated from enum value: ASSET_USE_PROJECT = 4;
   */
  PROJECT = 4,
}

/**
 * @generated from enum stabilityai.platformapis.generation.v1.StageAction
 */
export declare enum StageAction {
  /**
   * @generated from enum value: STAGE_ACTION_PASS = 0;
   */
  PASS = 0,

  /**
   * @generated from enum value: STAGE_ACTION_DISCARD = 1;
   */
  DISCARD = 1,

  /**
   * @generated from enum value: STAGE_ACTION_RETURN = 2;
   */
  RETURN = 2,
}

/**
 * Generally, a GPT BPE 16-bit token, paired with an optional string representation.
 *
 * @generated from message stabilityai.platformapis.generation.v1.Token
 */
export declare class Token extends Message<Token> {
  /**
   * @generated from field: optional string text = 1;
   */
  text?: string;

  /**
   * @generated from field: uint32 id = 2;
   */
  id: number;

  constructor(data?: PartialMessage<Token>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.Token";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Token;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Token;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Token;

  static equals(a: Token | PlainMessage<Token> | undefined, b: Token | PlainMessage<Token> | undefined): boolean;
}

/**
 * Sequence of tokens, paired with the id of the tokenizer used to generate them.
 *
 * @generated from message stabilityai.platformapis.generation.v1.Tokens
 */
export declare class Tokens extends Message<Tokens> {
  /**
   * @generated from field: repeated stabilityai.platformapis.generation.v1.Token tokens = 1;
   */
  tokens: Token[];

  /**
   * @generated from field: optional string tokenizer_id = 2;
   */
  tokenizerId?: string;

  constructor(data?: PartialMessage<Tokens>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.Tokens";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Tokens;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Tokens;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Tokens;

  static equals(a: Tokens | PlainMessage<Tokens> | undefined, b: Tokens | PlainMessage<Tokens> | undefined): boolean;
}

/**
 * A tangible Artifact, such as an image, video, or text that is used for input
 * or output.
 *
 * @generated from message stabilityai.platformapis.generation.v1.Artifact
 */
export declare class Artifact extends Message<Artifact> {
  /**
   * @generated from field: uint64 id = 1;
   */
  id: bigint;

  /**
   * @generated from field: stabilityai.platformapis.generation.v1.ArtifactType type = 2;
   */
  type: ArtifactType;

  /**
   * MIME type identifier, e.g. "image/png"
   *
   * @generated from field: string mime = 3;
   */
  mime: string;

  /**
   * Magic number, e.g. "PNG"
   *
   * @generated from field: optional string magic = 4;
   */
  magic?: string;

  /**
   * @generated from oneof stabilityai.platformapis.generation.v1.Artifact.data
   */
  data: {
    /**
     * Binary data, e.g. PNG image
     *
     * @generated from field: bytes binary = 5;
     */
    value: Uint8Array;
    case: "binary";
  } | {
    /**
     * Text data, e.g. text prompt
     *
     * @generated from field: string text = 6;
     */
    value: string;
    case: "text";
  } | {
    /**
     * Tokenized text data, e.g. GPT tokens
     *
     * @generated from field: stabilityai.platformapis.generation.v1.Tokens tokens = 7;
     */
    value: Tokens;
    case: "tokens";
  } | {
    /**
     * @generated from field: stabilityai.platformapis.generation.v1.ClassifierParameters classifier = 11;
     */
    value: ClassifierParameters;
    case: "classifier";
  } | {
    /**
     * torch.Tensor:
     *
     * @generated from field: tensors.Tensor tensor = 14;
     */
    value: Tensor;
    case: "tensor";
  } | { case: undefined; value?: undefined };

  /**
   * Index of this artifact in input/output list
   *
   * @generated from field: uint32 index = 8;
   */
  index: number;

  /**
   * Reason for finishing, if applicable
   *
   * @generated from field: stabilityai.platformapis.generation.v1.FinishReason finish_reason = 9;
   */
  finishReason: FinishReason;

  /**
   * Seed used to generate this artifact
   *
   * @generated from field: uint32 seed = 10;
   */
  seed: number;

  /**
   * UUIDv4 of the artifact, used for asset lookup
   *
   * @generated from field: string uuid = 12;
   */
  uuid: string;

  /**
   * Size of the artifact in bytes
   *
   * @generated from field: uint64 size = 13;
   */
  size: bigint;

  constructor(data?: PartialMessage<Artifact>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.Artifact";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Artifact;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Artifact;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Artifact;

  static equals(a: Artifact | PlainMessage<Artifact> | undefined, b: Artifact | PlainMessage<Artifact> | undefined): boolean;
}

/**
 * A set of parameters for each individual Prompt.
 *
 * @generated from message stabilityai.platformapis.generation.v1.PromptParameters
 */
export declare class PromptParameters extends Message<PromptParameters> {
  /**
   * deprecated, no longer used
   *
   * @generated from field: optional bool init = 1;
   */
  init?: boolean;

  /**
   * @generated from field: optional float weight = 2;
   */
  weight?: number;

  constructor(data?: PartialMessage<PromptParameters>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.PromptParameters";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PromptParameters;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PromptParameters;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PromptParameters;

  static equals(a: PromptParameters | PlainMessage<PromptParameters> | undefined, b: PromptParameters | PlainMessage<PromptParameters> | undefined): boolean;
}

/**
 * A Prompt is a special type of Artifact that is used to generate an output.
 * There can be multiple Prompts that affect the same output. Currently, the
 * only Prompts supported are:
 *   - Text (singular)
 *   - Init Image (singular, optional, type ARTIFACT_IMAGE)
 *   - Mask (singular, optional, type ARTIFACT_MASK)
 *   - Depth (singular, optional, type ARTIFACT_DEPTH)
 *
 * @generated from message stabilityai.platformapis.generation.v1.Prompt
 */
export declare class Prompt extends Message<Prompt> {
  /**
   * @generated from field: optional stabilityai.platformapis.generation.v1.PromptParameters parameters = 1;
   */
  parameters?: PromptParameters;

  /**
   * @generated from oneof stabilityai.platformapis.generation.v1.Prompt.prompt
   */
  prompt: {
    /**
     * @generated from field: string text = 2;
     */
    value: string;
    case: "text";
  } | {
    /**
     * @generated from field: stabilityai.platformapis.generation.v1.Tokens tokens = 3;
     */
    value: Tokens;
    case: "tokens";
  } | {
    /**
     * @generated from field: stabilityai.platformapis.generation.v1.Artifact artifact = 4;
     */
    value: Artifact;
    case: "artifact";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<Prompt>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.Prompt";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Prompt;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Prompt;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Prompt;

  static equals(a: Prompt | PlainMessage<Prompt> | undefined, b: Prompt | PlainMessage<Prompt> | undefined): boolean;
}

/**
 * Parameters that affect the behavior of the sampler, typically used for CFG.
 *
 * @generated from message stabilityai.platformapis.generation.v1.SamplerParameters
 */
export declare class SamplerParameters extends Message<SamplerParameters> {
  /**
   * @generated from field: optional float eta = 1;
   */
  eta?: number;

  /**
   * @generated from field: optional uint64 sampling_steps = 2;
   */
  samplingSteps?: bigint;

  /**
   * @generated from field: optional uint64 latent_channels = 3;
   */
  latentChannels?: bigint;

  /**
   * @generated from field: optional uint64 downsampling_factor = 4;
   */
  downsamplingFactor?: bigint;

  /**
   * @generated from field: optional float cfg_scale = 5;
   */
  cfgScale?: number;

  /**
   * defaults to 0.99
   *
   * @generated from field: optional float init_noise_scale = 6;
   */
  initNoiseScale?: number;

  /**
   * defaults to 0.99
   *
   * @generated from field: optional float step_noise_scale = 7;
   */
  stepNoiseScale?: number;

  constructor(data?: PartialMessage<SamplerParameters>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.SamplerParameters";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SamplerParameters;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SamplerParameters;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SamplerParameters;

  static equals(a: SamplerParameters | PlainMessage<SamplerParameters> | undefined, b: SamplerParameters | PlainMessage<SamplerParameters> | undefined): boolean;
}

/**
 * Unused, but reserved for future use. Adjustments to the latents after
 * initialization.
 *
 * @generated from message stabilityai.platformapis.generation.v1.ConditionerParameters
 */
export declare class ConditionerParameters extends Message<ConditionerParameters> {
  /**
   * @generated from field: optional string vector_adjust_prior = 1;
   */
  vectorAdjustPrior?: string;

  /**
   * @generated from field: optional stabilityai.platformapis.generation.v1.Model conditioner = 2;
   */
  conditioner?: Model;

  constructor(data?: PartialMessage<ConditionerParameters>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.ConditionerParameters";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConditionerParameters;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConditionerParameters;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConditionerParameters;

  static equals(a: ConditionerParameters | PlainMessage<ConditionerParameters> | undefined, b: ConditionerParameters | PlainMessage<ConditionerParameters> | undefined): boolean;
}

/**
 * When does this schedule definition apply?
 *
 * @generated from message stabilityai.platformapis.generation.v1.ScheduleParameters
 */
export declare class ScheduleParameters extends Message<ScheduleParameters> {
  /**
   * 0.0 to 1.0
   *
   * @generated from field: optional float start = 1;
   */
  start?: number;

  /**
   * 0.0 to 1.0
   *
   * @generated from field: optional float end = 2;
   */
  end?: number;

  /**
   * float value to apply on this schedule
   *
   * @generated from field: optional float value = 3;
   */
  value?: number;

  constructor(data?: PartialMessage<ScheduleParameters>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.ScheduleParameters";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScheduleParameters;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScheduleParameters;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScheduleParameters;

  static equals(a: ScheduleParameters | PlainMessage<ScheduleParameters> | undefined, b: ScheduleParameters | PlainMessage<ScheduleParameters> | undefined): boolean;
}

/**
 * Parameters that apply to this block of the schedule.
 *
 * @generated from message stabilityai.platformapis.generation.v1.StepParameter
 */
export declare class StepParameter extends Message<StepParameter> {
  /**
   * @generated from field: float scaled_step = 1;
   */
  scaledStep: number;

  /**
   * @generated from field: optional stabilityai.platformapis.generation.v1.SamplerParameters sampler = 2;
   */
  sampler?: SamplerParameters;

  /**
   * @generated from field: optional stabilityai.platformapis.generation.v1.ScheduleParameters schedule = 3;
   */
  schedule?: ScheduleParameters;

  /**
   * @generated from field: optional stabilityai.platformapis.generation.v1.GuidanceParameters guidance = 4;
   */
  guidance?: GuidanceParameters;

  constructor(data?: PartialMessage<StepParameter>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.StepParameter";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StepParameter;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StepParameter;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StepParameter;

  static equals(a: StepParameter | PlainMessage<StepParameter> | undefined, b: StepParameter | PlainMessage<StepParameter> | undefined): boolean;
}

/**
 * @generated from message stabilityai.platformapis.generation.v1.Model
 */
export declare class Model extends Message<Model> {
  /**
   * @generated from field: stabilityai.platformapis.generation.v1.ModelArchitecture architecture = 1;
   */
  architecture: ModelArchitecture;

  /**
   * @generated from field: string publisher = 2;
   */
  publisher: string;

  /**
   * @generated from field: string dataset = 3;
   */
  dataset: string;

  /**
   * @generated from field: float version = 4;
   */
  version: number;

  /**
   * @generated from field: string semantic_version = 5;
   */
  semanticVersion: string;

  /**
   * @generated from field: string alias = 6;
   */
  alias: string;

  constructor(data?: PartialMessage<Model>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.Model";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Model;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Model;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Model;

  static equals(a: Model | PlainMessage<Model> | undefined, b: Model | PlainMessage<Model> | undefined): boolean;
}

/**
 * @generated from message stabilityai.platformapis.generation.v1.CutoutParameters
 */
export declare class CutoutParameters extends Message<CutoutParameters> {
  /**
   * Nested cutouts, unsupported
   *
   * @generated from field: repeated stabilityai.platformapis.generation.v1.CutoutParameters cutouts = 1;
   */
  cutouts: CutoutParameters[];

  /**
   * 0 to n, usually 8 to 32, 0 inner
   *
   * @generated from field: optional uint32 count = 2;
   */
  count?: number;

  /**
   * 0.0 to 1.0, defaults to 0.2
   *
   * @generated from field: optional float gray = 3;
   */
  gray?: number;

  /**
   * percentage of cutouts to blur
   *
   * @generated from field: optional float blur = 4;
   */
  blur?: number;

  /**
   * defaults to inner: 0.5, outer: 0.0
   *
   * @generated from field: optional float size_power = 5;
   */
  sizePower?: number;

  constructor(data?: PartialMessage<CutoutParameters>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.CutoutParameters";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CutoutParameters;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CutoutParameters;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CutoutParameters;

  static equals(a: CutoutParameters | PlainMessage<CutoutParameters> | undefined, b: CutoutParameters | PlainMessage<CutoutParameters> | undefined): boolean;
}

/**
 * GuidanceScheduleParameters are used to define a schedule for CLIP guidance, and
 * are used to define the behavior of the guidance over time. They are relative
 * to the total number of steps, and are scaled to the number of steps in the
 * current run.
 *
 * @generated from message stabilityai.platformapis.generation.v1.GuidanceScheduleParameters
 */
export declare class GuidanceScheduleParameters extends Message<GuidanceScheduleParameters> {
  /**
   * @generated from field: float duration = 1;
   */
  duration: number;

  /**
   * @generated from field: float value = 2;
   */
  value: number;

  constructor(data?: PartialMessage<GuidanceScheduleParameters>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.GuidanceScheduleParameters";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GuidanceScheduleParameters;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GuidanceScheduleParameters;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GuidanceScheduleParameters;

  static equals(a: GuidanceScheduleParameters | PlainMessage<GuidanceScheduleParameters> | undefined, b: GuidanceScheduleParameters | PlainMessage<GuidanceScheduleParameters> | undefined): boolean;
}

/**
 * Parameters that affect the behavior of the guidance, typically used for CLIP.
 * We can specify more than one model, and the guidance will be a weighted sum
 * of the models.
 *
 * @generated from message stabilityai.platformapis.generation.v1.GuidanceInstanceParameters
 */
export declare class GuidanceInstanceParameters extends Message<GuidanceInstanceParameters> {
  /**
   * models to use for this set
   *
   * @generated from field: repeated stabilityai.platformapis.generation.v1.Model models = 2;
   */
  models: Model[];

  /**
   * 0.0 to 1.0, usually 0.05 to 0.225
   *
   * @generated from field: optional float guidance_strength = 3;
   */
  guidanceStrength?: number;

  /**
   * when to apply guidance
   *
   * @generated from field: repeated stabilityai.platformapis.generation.v1.GuidanceScheduleParameters schedule = 4;
   */
  schedule: GuidanceScheduleParameters[];

  /**
   * cutout parameters
   *
   * @generated from field: optional stabilityai.platformapis.generation.v1.CutoutParameters cutouts = 5;
   */
  cutouts?: CutoutParameters;

  /**
   * prompt to use for guidance
   *
   * @generated from field: optional stabilityai.platformapis.generation.v1.Prompt prompt = 6;
   */
  prompt?: Prompt;

  constructor(data?: PartialMessage<GuidanceInstanceParameters>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.GuidanceInstanceParameters";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GuidanceInstanceParameters;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GuidanceInstanceParameters;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GuidanceInstanceParameters;

  static equals(a: GuidanceInstanceParameters | PlainMessage<GuidanceInstanceParameters> | undefined, b: GuidanceInstanceParameters | PlainMessage<GuidanceInstanceParameters> | undefined): boolean;
}

/**
 * Parameters that affect the behavior of the guidance, typically used for CLIP.
 * The omission of this field implies the default guidance of CFG.
 *
 * @generated from message stabilityai.platformapis.generation.v1.GuidanceParameters
 */
export declare class GuidanceParameters extends Message<GuidanceParameters> {
  /**
   * base preset for guidance
   *
   * @generated from field: stabilityai.platformapis.generation.v1.GuidancePreset guidance_preset = 1;
   */
  guidancePreset: GuidancePreset;

  /**
   * guidance instances
   *
   * @generated from field: repeated stabilityai.platformapis.generation.v1.GuidanceInstanceParameters instances = 2;
   */
  instances: GuidanceInstanceParameters[];

  constructor(data?: PartialMessage<GuidanceParameters>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.GuidanceParameters";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GuidanceParameters;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GuidanceParameters;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GuidanceParameters;

  static equals(a: GuidanceParameters | PlainMessage<GuidanceParameters> | undefined, b: GuidanceParameters | PlainMessage<GuidanceParameters> | undefined): boolean;
}

/**
 * @generated from message stabilityai.platformapis.generation.v1.TransformType
 */
export declare class TransformType extends Message<TransformType> {
  /**
   * @generated from oneof stabilityai.platformapis.generation.v1.TransformType.type
   */
  type: {
    /**
     * @generated from field: stabilityai.platformapis.generation.v1.DiffusionSampler diffusion = 1;
     */
    value: DiffusionSampler;
    case: "diffusion";
  } | {
    /**
     * @generated from field: stabilityai.platformapis.generation.v1.Upscaler upscaler = 2;
     */
    value: Upscaler;
    case: "upscaler";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<TransformType>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.TransformType";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformType;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformType;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformType;

  static equals(a: TransformType | PlainMessage<TransformType> | undefined, b: TransformType | PlainMessage<TransformType> | undefined): boolean;
}

/**
 * @generated from message stabilityai.platformapis.generation.v1.T2IAdapterParameter
 */
export declare class T2IAdapterParameter extends Message<T2IAdapterParameter> {
  /**
   * @generated from field: stabilityai.platformapis.generation.v1.T2IAdapter adapter_type = 1;
   */
  adapterType: T2IAdapter;

  /**
   * @generated from field: float adapter_strength = 2;
   */
  adapterStrength: number;

  /**
   * @generated from field: stabilityai.platformapis.generation.v1.T2IAdapterInit adapter_init_type = 3;
   */
  adapterInitType: T2IAdapterInit;

  constructor(data?: PartialMessage<T2IAdapterParameter>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.T2IAdapterParameter";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): T2IAdapterParameter;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): T2IAdapterParameter;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): T2IAdapterParameter;

  static equals(a: T2IAdapterParameter | PlainMessage<T2IAdapterParameter> | undefined, b: T2IAdapterParameter | PlainMessage<T2IAdapterParameter> | undefined): boolean;
}

/**
 * @generated from message stabilityai.platformapis.generation.v1.ContentCredentialsParameters
 */
export declare class ContentCredentialsParameters extends Message<ContentCredentialsParameters> {
  /**
   * @generated from oneof stabilityai.platformapis.generation.v1.ContentCredentialsParameters.parameters
   */
  parameters: {
    /**
     * @generated from field: stabilityai.platformapis.generation.v1.ContentCredentialsParameters.ModelMetadata model_metadata = 1;
     */
    value: ContentCredentialsParameters_ModelMetadata;
    case: "modelMetadata";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<ContentCredentialsParameters>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.ContentCredentialsParameters";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentCredentialsParameters;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentCredentialsParameters;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentCredentialsParameters;

  static equals(a: ContentCredentialsParameters | PlainMessage<ContentCredentialsParameters> | undefined, b: ContentCredentialsParameters | PlainMessage<ContentCredentialsParameters> | undefined): boolean;
}

/**
 * @generated from enum stabilityai.platformapis.generation.v1.ContentCredentialsParameters.ModelMetadata
 */
export declare enum ContentCredentialsParameters_ModelMetadata {
  /**
   * @generated from enum value: MODEL_METADATA_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: MODEL_METADATA_SIGN_WITH_ENGINE_ID = 1;
   */
  SIGN_WITH_ENGINE_ID = 1,
}

/**
 * FineTuningParameters specify which fine-tuned models to use for generation.
 *
 * @generated from message stabilityai.platformapis.generation.v1.FineTuningParameters
 */
export declare class FineTuningParameters extends Message<FineTuningParameters> {
  /**
   * The id of the fine-tuned model to generate content from.
   * See FineTuningModel.id in finetuning.proto.
   * Model Id is created upon invoking CreateFineTuningModel.
   * When GetFineTuningModelStatus returns a FineTuningModelStatus of 
   * FINE_TUNING_MODEL_STATUS_COMPLETED, the model can be used 
   * for generating images.
   *
   * @generated from field: string model_id = 1;
   */
  modelId: string;

  /**
   * defaults to 1.0
   *
   * @generated from field: optional float weight = 2;
   */
  weight?: number;

  constructor(data?: PartialMessage<FineTuningParameters>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.FineTuningParameters";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FineTuningParameters;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FineTuningParameters;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FineTuningParameters;

  static equals(a: FineTuningParameters | PlainMessage<FineTuningParameters> | undefined, b: FineTuningParameters | PlainMessage<FineTuningParameters> | undefined): boolean;
}

/**
 * @generated from message stabilityai.platformapis.generation.v1.ImageParameters
 */
export declare class ImageParameters extends Message<ImageParameters> {
  /**
   * @generated from field: optional uint64 height = 1;
   */
  height?: bigint;

  /**
   * @generated from field: optional uint64 width = 2;
   */
  width?: bigint;

  /**
   * @generated from field: repeated uint32 seed = 3;
   */
  seed: number[];

  /**
   * @generated from field: optional uint64 samples = 4;
   */
  samples?: bigint;

  /**
   * @generated from field: optional uint64 steps = 5;
   */
  steps?: bigint;

  /**
   * @generated from field: optional stabilityai.platformapis.generation.v1.TransformType transform = 6;
   */
  transform?: TransformType;

  /**
   * @generated from field: repeated stabilityai.platformapis.generation.v1.StepParameter parameters = 7;
   */
  parameters: StepParameter[];

  /**
   * defaults to MASKED_AREA_INIT_ZERO
   *
   * @generated from field: optional stabilityai.platformapis.generation.v1.MaskedAreaInit masked_area_init = 8;
   */
  maskedAreaInit?: MaskedAreaInit;

  /**
   * defaults to TEXT_ENCODER
   *
   * @generated from field: optional stabilityai.platformapis.generation.v1.WeightMethod weight_method = 9;
   */
  weightMethod?: WeightMethod;

  /**
   * defaults to true
   *
   * @generated from field: optional bool quantize = 10;
   */
  quantize?: boolean;

  /**
   * @generated from field: optional stabilityai.platformapis.generation.v1.T2IAdapterParameter adapter = 12;
   */
  adapter?: T2IAdapterParameter;

  /**
   * @generated from field: repeated stabilityai.platformapis.generation.v1.FineTuningParameters fine_tuning_parameters = 13;
   */
  fineTuningParameters: FineTuningParameters[];

  /**
   * Set field to have image signed by C2PA
   *
   * @generated from field: optional stabilityai.platformapis.generation.v1.ContentCredentialsParameters content_credentials_parameters = 14;
   */
  contentCredentialsParameters?: ContentCredentialsParameters;

  constructor(data?: PartialMessage<ImageParameters>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.ImageParameters";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImageParameters;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImageParameters;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImageParameters;

  static equals(a: ImageParameters | PlainMessage<ImageParameters> | undefined, b: ImageParameters | PlainMessage<ImageParameters> | undefined): boolean;
}

/**
 * @generated from message stabilityai.platformapis.generation.v1.ClassifierConcept
 */
export declare class ClassifierConcept extends Message<ClassifierConcept> {
  /**
   * @generated from field: string concept = 1;
   */
  concept: string;

  /**
   * @generated from field: optional float threshold = 2;
   */
  threshold?: number;

  constructor(data?: PartialMessage<ClassifierConcept>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.ClassifierConcept";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClassifierConcept;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClassifierConcept;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClassifierConcept;

  static equals(a: ClassifierConcept | PlainMessage<ClassifierConcept> | undefined, b: ClassifierConcept | PlainMessage<ClassifierConcept> | undefined): boolean;
}

/**
 * @generated from message stabilityai.platformapis.generation.v1.ClassifierCategory
 */
export declare class ClassifierCategory extends Message<ClassifierCategory> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: repeated stabilityai.platformapis.generation.v1.ClassifierConcept concepts = 2;
   */
  concepts: ClassifierConcept[];

  /**
   * @generated from field: optional float adjustment = 3;
   */
  adjustment?: number;

  /**
   * @generated from field: optional stabilityai.platformapis.generation.v1.Action action = 4;
   */
  action?: Action;

  /**
   * @generated from field: optional stabilityai.platformapis.generation.v1.ClassifierMode classifier_mode = 5;
   */
  classifierMode?: ClassifierMode;

  constructor(data?: PartialMessage<ClassifierCategory>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.ClassifierCategory";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClassifierCategory;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClassifierCategory;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClassifierCategory;

  static equals(a: ClassifierCategory | PlainMessage<ClassifierCategory> | undefined, b: ClassifierCategory | PlainMessage<ClassifierCategory> | undefined): boolean;
}

/**
 * @generated from message stabilityai.platformapis.generation.v1.ClassifierParameters
 */
export declare class ClassifierParameters extends Message<ClassifierParameters> {
  /**
   * @generated from field: repeated stabilityai.platformapis.generation.v1.ClassifierCategory categories = 1;
   */
  categories: ClassifierCategory[];

  /**
   * @generated from field: repeated stabilityai.platformapis.generation.v1.ClassifierCategory exceeds = 2;
   */
  exceeds: ClassifierCategory[];

  /**
   * @generated from field: optional stabilityai.platformapis.generation.v1.Action realized_action = 3;
   */
  realizedAction?: Action;

  constructor(data?: PartialMessage<ClassifierParameters>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.ClassifierParameters";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClassifierParameters;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClassifierParameters;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClassifierParameters;

  static equals(a: ClassifierParameters | PlainMessage<ClassifierParameters> | undefined, b: ClassifierParameters | PlainMessage<ClassifierParameters> | undefined): boolean;
}

/**
 * Interpolation between two images applied at specified blend ratios
 *
 * @generated from message stabilityai.platformapis.generation.v1.InterpolateParameters
 */
export declare class InterpolateParameters extends Message<InterpolateParameters> {
  /**
   * @generated from field: repeated float ratios = 1;
   */
  ratios: number[];

  /**
   * @generated from field: optional stabilityai.platformapis.generation.v1.InterpolateMode mode = 2;
   */
  mode?: InterpolateMode;

  constructor(data?: PartialMessage<InterpolateParameters>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.InterpolateParameters";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InterpolateParameters;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InterpolateParameters;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InterpolateParameters;

  static equals(a: InterpolateParameters | PlainMessage<InterpolateParameters> | undefined, b: InterpolateParameters | PlainMessage<InterpolateParameters> | undefined): boolean;
}

/**
 * @generated from message stabilityai.platformapis.generation.v1.TransformColorAdjust
 */
export declare class TransformColorAdjust extends Message<TransformColorAdjust> {
  /**
   * scale pixel intensities, 1.0 is no change
   *
   * @generated from field: optional float brightness = 1;
   */
  brightness?: number;

  /**
   * contrast adjustment, 1.0 is no change
   *
   * @generated from field: optional float contrast = 2;
   */
  contrast?: number;

  /**
   * -180 to 180 hue adjustment, 0.0 is no change
   *
   * @generated from field: optional float hue = 3;
   */
  hue?: number;

  /**
   * 0.0 to 2.0 saturation scale, 1.0 is no change
   *
   * @generated from field: optional float saturation = 4;
   */
  saturation?: number;

  /**
   * -1.0 to 1.0 lightness adjustment, 0.0 is no change
   *
   * @generated from field: optional float lightness = 5;
   */
  lightness?: number;

  /**
   * image to color match
   *
   * @generated from field: optional stabilityai.platformapis.generation.v1.Artifact match_image = 6;
   */
  matchImage?: Artifact;

  /**
   * color match mode to use
   *
   * @generated from field: optional stabilityai.platformapis.generation.v1.ColorMatchMode match_mode = 7;
   */
  matchMode?: ColorMatchMode;

  /**
   * amount of gaussian noise to add
   *
   * @generated from field: optional float noise_amount = 8;
   */
  noiseAmount?: number;

  /**
   * random seed for noise
   *
   * @generated from field: optional uint32 noise_seed = 9;
   */
  noiseSeed?: number;

  constructor(data?: PartialMessage<TransformColorAdjust>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.TransformColorAdjust";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformColorAdjust;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformColorAdjust;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformColorAdjust;

  static equals(a: TransformColorAdjust | PlainMessage<TransformColorAdjust> | undefined, b: TransformColorAdjust | PlainMessage<TransformColorAdjust> | undefined): boolean;
}

/**
 * @generated from message stabilityai.platformapis.generation.v1.TransformDepthCalc
 */
export declare class TransformDepthCalc extends Message<TransformDepthCalc> {
  /**
   * blend factor between AdaBins (0.0) and MiDaS (1.0)
   *
   * @generated from field: optional float blend_weight = 1;
   */
  blendWeight?: number;

  /**
   * defaults to 0.0
   *
   * @generated from field: optional uint32 blur_radius = 2;
   */
  blurRadius?: number;

  /**
   * make near depths have higher values
   *
   * @generated from field: optional bool reverse = 3;
   */
  reverse?: boolean;

  constructor(data?: PartialMessage<TransformDepthCalc>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.TransformDepthCalc";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformDepthCalc;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformDepthCalc;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformDepthCalc;

  static equals(a: TransformDepthCalc | PlainMessage<TransformDepthCalc> | undefined, b: TransformDepthCalc | PlainMessage<TransformDepthCalc> | undefined): boolean;
}

/**
 * @generated from message stabilityai.platformapis.generation.v1.TransformMatrix
 */
export declare class TransformMatrix extends Message<TransformMatrix> {
  /**
   * Column-major 3x3 or 4x4 perspective matrix
   * [sx, 10, 20, tx]   [x]
   * [01, sy, 21, ty] . [y]
   * [02, 12, sz, tz]   [z]
   * [03, 13, 23, 33]   [1]
   *
   * @generated from field: repeated float data = 1 [packed = true];
   */
  data: number[];

  constructor(data?: PartialMessage<TransformMatrix>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.TransformMatrix";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformMatrix;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformMatrix;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformMatrix;

  static equals(a: TransformMatrix | PlainMessage<TransformMatrix> | undefined, b: TransformMatrix | PlainMessage<TransformMatrix> | undefined): boolean;
}

/**
 * @generated from message stabilityai.platformapis.generation.v1.TransformResample
 */
export declare class TransformResample extends Message<TransformResample> {
  /**
   * extrapolation of border pixels
   *
   * @generated from field: stabilityai.platformapis.generation.v1.BorderMode border_mode = 1;
   */
  borderMode: BorderMode;

  /**
   * 3x3 or 4x4 matrix
   *
   * @generated from field: stabilityai.platformapis.generation.v1.TransformMatrix transform = 2;
   */
  transform?: TransformMatrix;

  /**
   * 3x3 or 4x4 matrix, defaults to identity
   *
   * @generated from field: optional stabilityai.platformapis.generation.v1.TransformMatrix prev_transform = 3;
   */
  prevTransform?: TransformMatrix;

  /**
   * depth warp factor, defaults to 1.0
   *
   * @generated from field: optional float depth_warp = 4;
   */
  depthWarp?: number;

  /**
   * return inpaint mask
   *
   * @generated from field: optional bool export_mask = 5;
   */
  exportMask?: boolean;

  constructor(data?: PartialMessage<TransformResample>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.TransformResample";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformResample;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformResample;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformResample;

  static equals(a: TransformResample | PlainMessage<TransformResample> | undefined, b: TransformResample | PlainMessage<TransformResample> | undefined): boolean;
}

/**
 * @generated from message stabilityai.platformapis.generation.v1.CameraParameters
 */
export declare class CameraParameters extends Message<CameraParameters> {
  /**
   * @generated from field: stabilityai.platformapis.generation.v1.CameraType camera_type = 1;
   */
  cameraType: CameraType;

  /**
   * Nearest plane depth of a rendered frustum
   *
   * @generated from field: float near_plane = 2;
   */
  nearPlane: number;

  /**
   * Farthest plane depth of a rendered frustum
   *
   * @generated from field: float far_plane = 3;
   */
  farPlane: number;

  /**
   * Camera field of view (in degrees). Must be set for CAMERA_PERSPECTIVE type.
   *
   * @generated from field: optional float fov = 4;
   */
  fov?: number;

  constructor(data?: PartialMessage<CameraParameters>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.CameraParameters";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CameraParameters;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CameraParameters;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CameraParameters;

  static equals(a: CameraParameters | PlainMessage<CameraParameters> | undefined, b: CameraParameters | PlainMessage<CameraParameters> | undefined): boolean;
}

/**
 * @generated from message stabilityai.platformapis.generation.v1.TransformCameraPose
 */
export declare class TransformCameraPose extends Message<TransformCameraPose> {
  /**
   * 4x4 transform matrix for the next frame
   *
   * @generated from field: stabilityai.platformapis.generation.v1.TransformMatrix world_to_view_matrix = 1;
   */
  worldToViewMatrix?: TransformMatrix;

  /**
   * @generated from field: stabilityai.platformapis.generation.v1.CameraParameters camera_parameters = 2;
   */
  cameraParameters?: CameraParameters;

  /**
   * Prefill masked areas with values matching the colors around the area
   *
   * @generated from field: bool do_prefill = 5;
   */
  doPrefill: boolean;

  /**
   * Both image and mask will be rendered using this method.
   *
   * @generated from field: stabilityai.platformapis.generation.v1.RenderMode render_mode = 8;
   */
  renderMode: RenderMode;

  constructor(data?: PartialMessage<TransformCameraPose>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.TransformCameraPose";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformCameraPose;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformCameraPose;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformCameraPose;

  static equals(a: TransformCameraPose | PlainMessage<TransformCameraPose> | undefined, b: TransformCameraPose | PlainMessage<TransformCameraPose> | undefined): boolean;
}

/**
 * @generated from message stabilityai.platformapis.generation.v1.TransformParameters
 */
export declare class TransformParameters extends Message<TransformParameters> {
  /**
   * @generated from oneof stabilityai.platformapis.generation.v1.TransformParameters.transform
   */
  transform: {
    /**
     * @generated from field: stabilityai.platformapis.generation.v1.TransformColorAdjust color_adjust = 2;
     */
    value: TransformColorAdjust;
    case: "colorAdjust";
  } | {
    /**
     * @generated from field: stabilityai.platformapis.generation.v1.TransformDepthCalc depth_calc = 4;
     */
    value: TransformDepthCalc;
    case: "depthCalc";
  } | {
    /**
     * @generated from field: stabilityai.platformapis.generation.v1.TransformResample resample = 5;
     */
    value: TransformResample;
    case: "resample";
  } | {
    /**
     * @generated from field: stabilityai.platformapis.generation.v1.TransformCameraPose camera_pose = 6;
     */
    value: TransformCameraPose;
    case: "cameraPose";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<TransformParameters>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.TransformParameters";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransformParameters;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransformParameters;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransformParameters;

  static equals(a: TransformParameters | PlainMessage<TransformParameters> | undefined, b: TransformParameters | PlainMessage<TransformParameters> | undefined): boolean;
}

/**
 * @generated from message stabilityai.platformapis.generation.v1.AssetParameters
 */
export declare class AssetParameters extends Message<AssetParameters> {
  /**
   * @generated from field: stabilityai.platformapis.generation.v1.AssetAction action = 1;
   */
  action: AssetAction;

  /**
   * @generated from field: string project_id = 2;
   */
  projectId: string;

  /**
   * @generated from field: stabilityai.platformapis.generation.v1.AssetUse use = 3;
   */
  use: AssetUse;

  constructor(data?: PartialMessage<AssetParameters>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.AssetParameters";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssetParameters;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssetParameters;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssetParameters;

  static equals(a: AssetParameters | PlainMessage<AssetParameters> | undefined, b: AssetParameters | PlainMessage<AssetParameters> | undefined): boolean;
}

/**
 * AnswerMeta is a set of metadata about an answer, usually the operating
 * environment.
 *
 * @generated from message stabilityai.platformapis.generation.v1.AnswerMeta
 */
export declare class AnswerMeta extends Message<AnswerMeta> {
  /**
   * @generated from field: optional string gpu_id = 1;
   */
  gpuId?: string;

  /**
   * @generated from field: optional string cpu_id = 2;
   */
  cpuId?: string;

  /**
   * @generated from field: optional string node_id = 3;
   */
  nodeId?: string;

  /**
   * @generated from field: optional string engine_id = 4;
   */
  engineId?: string;

  constructor(data?: PartialMessage<AnswerMeta>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.AnswerMeta";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AnswerMeta;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AnswerMeta;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AnswerMeta;

  static equals(a: AnswerMeta | PlainMessage<AnswerMeta> | undefined, b: AnswerMeta | PlainMessage<AnswerMeta> | undefined): boolean;
}

/**
 * An Answer is a response to a Request. It is a set of Artifacts, which can be
 * of any type and forwarded to the client or the next stage.
 *
 * @generated from message stabilityai.platformapis.generation.v1.Answer
 */
export declare class Answer extends Message<Answer> {
  /**
   * @generated from field: string answer_id = 1;
   */
  answerId: string;

  /**
   * @generated from field: string request_id = 2;
   */
  requestId: string;

  /**
   * @generated from field: uint64 received = 3;
   */
  received: bigint;

  /**
   * @generated from field: uint64 created = 4;
   */
  created: bigint;

  /**
   * @generated from field: optional stabilityai.platformapis.generation.v1.AnswerMeta meta = 6;
   */
  meta?: AnswerMeta;

  /**
   * @generated from field: repeated stabilityai.platformapis.generation.v1.Artifact artifacts = 7;
   */
  artifacts: Artifact[];

  constructor(data?: PartialMessage<Answer>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.Answer";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Answer;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Answer;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Answer;

  static equals(a: Answer | PlainMessage<Answer> | undefined, b: Answer | PlainMessage<Answer> | undefined): boolean;
}

/**
 * An AnswerBatch is a set of Answers. It can represent one or several completed
 * requests, which may be sent to the client in a single response.
 *
 * @generated from message stabilityai.platformapis.generation.v1.AnswerBatch
 */
export declare class AnswerBatch extends Message<AnswerBatch> {
  /**
   * @generated from field: string batch_id = 1;
   */
  batchId: string;

  /**
   * @generated from field: repeated stabilityai.platformapis.generation.v1.Answer answers = 2;
   */
  answers: Answer[];

  constructor(data?: PartialMessage<AnswerBatch>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.AnswerBatch";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AnswerBatch;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AnswerBatch;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AnswerBatch;

  static equals(a: AnswerBatch | PlainMessage<AnswerBatch> | undefined, b: AnswerBatch | PlainMessage<AnswerBatch> | undefined): boolean;
}

/**
 * A Request is a set of Artifacts, which can be of any type with model or
 * transform parameters. It is sent to the server, which will respond with an
 * Answer.
 *
 * @generated from message stabilityai.platformapis.generation.v1.Request
 */
export declare class Request extends Message<Request> {
  /**
   * @generated from field: string engine_id = 1;
   */
  engineId: string;

  /**
   * @generated from field: string request_id = 2;
   */
  requestId: string;

  /**
   * @generated from field: stabilityai.platformapis.generation.v1.ArtifactType requested_type = 3;
   */
  requestedType: ArtifactType;

  /**
   * @generated from field: repeated stabilityai.platformapis.generation.v1.Prompt prompt = 4;
   */
  prompt: Prompt[];

  /**
   * @generated from oneof stabilityai.platformapis.generation.v1.Request.params
   */
  params: {
    /**
     * @generated from field: stabilityai.platformapis.generation.v1.ImageParameters image = 5;
     */
    value: ImageParameters;
    case: "image";
  } | {
    /**
     * @generated from field: stabilityai.platformapis.generation.v1.ClassifierParameters classifier = 7;
     */
    value: ClassifierParameters;
    case: "classifier";
  } | {
    /**
     * @generated from field: stabilityai.platformapis.generation.v1.AssetParameters asset = 8;
     */
    value: AssetParameters;
    case: "asset";
  } | {
    /**
     * @generated from field: stabilityai.platformapis.generation.v1.InterpolateParameters interpolate = 11;
     */
    value: InterpolateParameters;
    case: "interpolate";
  } | {
    /**
     * @generated from field: stabilityai.platformapis.generation.v1.TransformParameters transform = 12;
     */
    value: TransformParameters;
    case: "transform";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: optional stabilityai.platformapis.generation.v1.ConditionerParameters conditioner = 6;
   */
  conditioner?: ConditionerParameters;

  /**
   * for development use
   *
   * @generated from field: optional google.protobuf.Struct extras = 2047;
   */
  extras?: Struct;

  constructor(data?: PartialMessage<Request>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.Request";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Request;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Request;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Request;

  static equals(a: Request | PlainMessage<Request> | undefined, b: Request | PlainMessage<Request> | undefined): boolean;
}

/**
 * @generated from message stabilityai.platformapis.generation.v1.OnStatus
 */
export declare class OnStatus extends Message<OnStatus> {
  /**
   * @generated from field: repeated stabilityai.platformapis.generation.v1.FinishReason reason = 1;
   */
  reason: FinishReason[];

  /**
   * @generated from field: optional string target = 2;
   */
  target?: string;

  /**
   * @generated from field: repeated stabilityai.platformapis.generation.v1.StageAction action = 3;
   */
  action: StageAction[];

  constructor(data?: PartialMessage<OnStatus>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.OnStatus";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OnStatus;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OnStatus;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OnStatus;

  static equals(a: OnStatus | PlainMessage<OnStatus> | undefined, b: OnStatus | PlainMessage<OnStatus> | undefined): boolean;
}

/**
 * @generated from message stabilityai.platformapis.generation.v1.Stage
 */
export declare class Stage extends Message<Stage> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: stabilityai.platformapis.generation.v1.Request request = 2;
   */
  request?: Request;

  /**
   * @generated from field: repeated stabilityai.platformapis.generation.v1.OnStatus on_status = 3;
   */
  onStatus: OnStatus[];

  constructor(data?: PartialMessage<Stage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.Stage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Stage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Stage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Stage;

  static equals(a: Stage | PlainMessage<Stage> | undefined, b: Stage | PlainMessage<Stage> | undefined): boolean;
}

/**
 * @generated from message stabilityai.platformapis.generation.v1.ChainRequest
 */
export declare class ChainRequest extends Message<ChainRequest> {
  /**
   * @generated from field: string request_id = 1;
   */
  requestId: string;

  /**
   * @generated from field: repeated stabilityai.platformapis.generation.v1.Stage stage = 2;
   */
  stage: Stage[];

  constructor(data?: PartialMessage<ChainRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stabilityai.platformapis.generation.v1.ChainRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChainRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChainRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChainRequest;

  static equals(a: ChainRequest | PlainMessage<ChainRequest> | undefined, b: ChainRequest | PlainMessage<ChainRequest> | undefined): boolean;
}

